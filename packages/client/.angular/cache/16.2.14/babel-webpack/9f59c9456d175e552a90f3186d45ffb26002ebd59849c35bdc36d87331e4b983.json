{"ast":null,"code":"import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { DropzoneState, addDropzone } from './addDropzone.js';\nimport { fileIsImage } from '../../utils/fileTypes.js';\nimport { Modal } from '../Modal/Modal.js';\nimport { stringToArray } from '../../utils/stringToArray.js';\nimport { UploadSource } from '../utils/UploadSource.js';\nexport class DropArea extends UploaderBlock {\n  init$ = {\n    ...this.init$,\n    state: DropzoneState.INACTIVE,\n    withIcon: false,\n    isClickable: false,\n    isFullscreen: false,\n    isEnabled: true,\n    isVisible: true,\n    text: this.l10n('drop-files-here'),\n    'lr-drop-area/targets': null\n  };\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-source-list': ''\n  };\n  isActive() {\n    if (!this.$.isEnabled) {\n      return false;\n    }\n    const bounds = this.getBoundingClientRect();\n    const hasSize = bounds.width > 0 && bounds.height > 0;\n    const isInViewport = bounds.top >= 0 && bounds.left >= 0 && bounds.bottom <= (window.innerHeight || document.documentElement.clientHeight) && bounds.right <= (window.innerWidth || document.documentElement.clientWidth);\n    const style = window.getComputedStyle(this);\n    const visible = style.visibility !== 'hidden' && style.display !== 'none';\n    return hasSize && visible && isInViewport;\n  }\n  initCallback() {\n    super.initCallback();\n    if (!this.$['lr-drop-area/targets']) {\n      this.$['lr-drop-area/targets'] = new Set();\n    }\n    this.$['lr-drop-area/targets'].add(this);\n    this.defineAccessor('disabled', value => {\n      this.set$({\n        isEnabled: !value\n      });\n    });\n    this.defineAccessor('clickable', value => {\n      this.set$({\n        isClickable: typeof value === 'string'\n      });\n    });\n    this.defineAccessor('with-icon', value => {\n      this.set$({\n        withIcon: typeof value === 'string'\n      });\n    });\n    this.defineAccessor('fullscreen', value => {\n      this.set$({\n        isFullscreen: typeof value === 'string'\n      });\n    });\n    this.defineAccessor('text', value => {\n      if (value) {\n        this.set$({\n          text: this.l10n(value) || value\n        });\n      } else {\n        this.set$({\n          text: this.l10n('drop-files-here')\n        });\n      }\n    });\n\n    /** @private */\n    this._destroyDropzone = addDropzone({\n      element: this,\n      shouldIgnore: () => this._shouldIgnore(),\n      onChange: state => {\n        this.$.state = state;\n      },\n      /** @param {(File | String)[]} items */\n      onItems: items => {\n        if (!items.length) {\n          return;\n        }\n        let isMultiple = this.getCssData('--cfg-multiple');\n        let multipleMax = this.getCssData('--cfg-multiple-max');\n        let currentFilesCount = this.uploadCollection.size;\n        if (isMultiple && multipleMax) {\n          items = items.slice(0, multipleMax - currentFilesCount - 1);\n        } else if (!isMultiple) {\n          items = items.slice(0, currentFilesCount > 0 ? 0 : 1);\n        }\n        items.forEach(( /** @type {File | String} */item) => {\n          if (typeof item === 'string') {\n            this.addFileFromUrl(item, {\n              source: UploadSource.DROP_AREA\n            });\n            return;\n          }\n          this.addFileFromObject(item, {\n            source: UploadSource.DROP_AREA\n          });\n        });\n        if (this.uploadCollection.size) {\n          this.set$({\n            '*currentActivity': ActivityBlock.activities.UPLOAD_LIST\n          });\n          this.setForCtxTarget(Modal.StateConsumerScope, '*modalActive', true);\n        }\n      }\n    });\n    let contentWrapperEl = this.ref['content-wrapper'];\n    if (contentWrapperEl) {\n      this._destroyContentWrapperDropzone = addDropzone({\n        element: contentWrapperEl,\n        onChange: state => {\n          const stateText = Object.entries(DropzoneState).find(([, value]) => value === state)?.[0].toLowerCase();\n          stateText && contentWrapperEl.setAttribute('drag-state', stateText);\n        },\n        onItems: () => {},\n        shouldIgnore: () => this._shouldIgnore()\n      });\n    }\n    this.sub('state', state => {\n      const stateText = Object.entries(DropzoneState).find(([, value]) => value === state)?.[0].toLowerCase();\n      if (stateText) {\n        this.setAttribute('drag-state', stateText);\n      }\n    });\n    this.sub('--cfg-source-list', value => {\n      const list = stringToArray(value);\n      // Enable drop area if local files are allowed\n      this.$.isEnabled = list.includes(UploaderBlock.sourceTypes.LOCAL);\n      // Show drop area if it's enabled or default slot is overrided\n      this.$.isVisible = this.$.isEnabled || !this.querySelector('[data-default-slot]');\n    });\n    this.sub('isVisible', value => {\n      this.toggleAttribute('hidden', !value);\n    });\n    if (this.$.isClickable) {\n      // @private\n      this._onAreaClicked = () => {\n        this.openSystemDialog();\n      };\n      this.addEventListener('click', this._onAreaClicked);\n    }\n  }\n\n  /**\n   * Ignore drop events if there are other visible drop areas on the page\n   *\n   * @private\n   * @returns {Boolean}\n   */\n  _shouldIgnore() {\n    if (!this.$.isEnabled) {\n      return true;\n    }\n    if (!this._couldHandleFiles()) {\n      return true;\n    }\n    if (!this.$.isFullscreen) {\n      return false;\n    }\n    const otherTargets = [...this.$['lr-drop-area/targets']].filter(el => el !== this);\n    const activeTargets = otherTargets.filter(( /** @type {typeof this} */el) => {\n      return el.isActive();\n    });\n    return activeTargets.length > 0;\n  }\n\n  /** @private */\n  _couldHandleFiles() {\n    let isMultiple = this.getCssData('--cfg-multiple');\n    let multipleMax = this.getCssData('--cfg-multiple-max');\n    let currentFilesCount = this.uploadCollection.size;\n    if (isMultiple && multipleMax && currentFilesCount >= multipleMax) {\n      return false;\n    }\n    if (!isMultiple && currentFilesCount > 0) {\n      return false;\n    }\n    return true;\n  }\n  destroyCallback() {\n    super.destroyCallback();\n    this.$['lr-drop-area/targets']?.remove?.(this);\n    this._destroyDropzone?.();\n    this._destroyContentWrapperDropzone?.();\n    if (this._onAreaClicked) {\n      this.removeEventListener('click', this._onAreaClicked);\n    }\n  }\n}\nDropArea.template = /* HTML */`\n  <slot>\n    <div data-default-slot hidden></div>\n    <div ref=\"content-wrapper\" class=\"content-wrapper\" set=\"@hidden: !isVisible\">\n      <div class=\"icon-container\" set=\"@hidden: !withIcon\">\n        <lr-icon name=\"default\"></lr-icon>\n        <lr-icon name=\"arrow-down\"></lr-icon>\n      </div>\n      <span class=\"text\">{{text}}</span>\n    </div>\n  </slot>\n`;\nDropArea.bindAttributes({\n  'with-icon': null,\n  clickable: null,\n  text: null,\n  fullscreen: null,\n  disabled: null\n});","map":{"version":3,"names":["UploaderBlock","ActivityBlock","DropzoneState","addDropzone","fileIsImage","Modal","stringToArray","UploadSource","DropArea","init$","state","INACTIVE","withIcon","isClickable","isFullscreen","isEnabled","isVisible","text","l10n","cssInit$","isActive","$","bounds","getBoundingClientRect","hasSize","width","height","isInViewport","top","left","bottom","window","innerHeight","document","documentElement","clientHeight","right","innerWidth","clientWidth","style","getComputedStyle","visible","visibility","display","initCallback","Set","add","defineAccessor","value","set$","_destroyDropzone","element","shouldIgnore","_shouldIgnore","onChange","onItems","items","length","isMultiple","getCssData","multipleMax","currentFilesCount","uploadCollection","size","slice","forEach","item","addFileFromUrl","source","DROP_AREA","addFileFromObject","activities","UPLOAD_LIST","setForCtxTarget","StateConsumerScope","contentWrapperEl","ref","_destroyContentWrapperDropzone","stateText","Object","entries","find","toLowerCase","setAttribute","sub","list","includes","sourceTypes","LOCAL","querySelector","toggleAttribute","_onAreaClicked","openSystemDialog","addEventListener","_couldHandleFiles","otherTargets","filter","el","activeTargets","destroyCallback","remove","removeEventListener","template","bindAttributes","clickable","fullscreen","disabled"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/DropArea/DropArea.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { DropzoneState, addDropzone } from './addDropzone.js';\nimport { fileIsImage } from '../../utils/fileTypes.js';\nimport { Modal } from '../Modal/Modal.js';\nimport { stringToArray } from '../../utils/stringToArray.js';\nimport { UploadSource } from '../utils/UploadSource.js';\n\nexport class DropArea extends UploaderBlock {\n  init$ = {\n    ...this.init$,\n    state: DropzoneState.INACTIVE,\n    withIcon: false,\n    isClickable: false,\n    isFullscreen: false,\n    isEnabled: true,\n    isVisible: true,\n    text: this.l10n('drop-files-here'),\n    'lr-drop-area/targets': null,\n  };\n\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-source-list': '',\n  };\n\n  isActive() {\n    if (!this.$.isEnabled) {\n      return false;\n    }\n    const bounds = this.getBoundingClientRect();\n    const hasSize = bounds.width > 0 && bounds.height > 0;\n    const isInViewport =\n      bounds.top >= 0 &&\n      bounds.left >= 0 &&\n      bounds.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n      bounds.right <= (window.innerWidth || document.documentElement.clientWidth);\n\n    const style = window.getComputedStyle(this);\n    const visible = style.visibility !== 'hidden' && style.display !== 'none';\n\n    return hasSize && visible && isInViewport;\n  }\n  initCallback() {\n    super.initCallback();\n\n    if (!this.$['lr-drop-area/targets']) {\n      this.$['lr-drop-area/targets'] = new Set();\n    }\n    this.$['lr-drop-area/targets'].add(this);\n\n    this.defineAccessor('disabled', (value) => {\n      this.set$({ isEnabled: !value });\n    });\n    this.defineAccessor('clickable', (value) => {\n      this.set$({ isClickable: typeof value === 'string' });\n    });\n    this.defineAccessor('with-icon', (value) => {\n      this.set$({ withIcon: typeof value === 'string' });\n    });\n    this.defineAccessor('fullscreen', (value) => {\n      this.set$({ isFullscreen: typeof value === 'string' });\n    });\n\n    this.defineAccessor('text', (value) => {\n      if (value) {\n        this.set$({ text: this.l10n(value) || value });\n      } else {\n        this.set$({ text: this.l10n('drop-files-here') });\n      }\n    });\n\n    /** @private */\n    this._destroyDropzone = addDropzone({\n      element: this,\n      shouldIgnore: () => this._shouldIgnore(),\n      onChange: (state) => {\n        this.$.state = state;\n      },\n      /** @param {(File | String)[]} items */\n      onItems: (items) => {\n        if (!items.length) {\n          return;\n        }\n        let isMultiple = this.getCssData('--cfg-multiple');\n        let multipleMax = this.getCssData('--cfg-multiple-max');\n        let currentFilesCount = this.uploadCollection.size;\n        if (isMultiple && multipleMax) {\n          items = items.slice(0, multipleMax - currentFilesCount - 1);\n        } else if (!isMultiple) {\n          items = items.slice(0, currentFilesCount > 0 ? 0 : 1);\n        }\n        items.forEach((/** @type {File | String} */ item) => {\n          if (typeof item === 'string') {\n            this.addFileFromUrl(item, { source: UploadSource.DROP_AREA });\n            return;\n          }\n          this.addFileFromObject(item, { source: UploadSource.DROP_AREA });\n        });\n        if (this.uploadCollection.size) {\n          this.set$({\n            '*currentActivity': ActivityBlock.activities.UPLOAD_LIST,\n          });\n          this.setForCtxTarget(Modal.StateConsumerScope, '*modalActive', true);\n        }\n      },\n    });\n\n    let contentWrapperEl = this.ref['content-wrapper'];\n    if (contentWrapperEl) {\n      this._destroyContentWrapperDropzone = addDropzone({\n        element: contentWrapperEl,\n        onChange: (state) => {\n          const stateText = Object.entries(DropzoneState)\n            .find(([, value]) => value === state)?.[0]\n            .toLowerCase();\n          stateText && contentWrapperEl.setAttribute('drag-state', stateText);\n        },\n        onItems: () => {},\n        shouldIgnore: () => this._shouldIgnore(),\n      });\n    }\n\n    this.sub('state', (state) => {\n      const stateText = Object.entries(DropzoneState)\n        .find(([, value]) => value === state)?.[0]\n        .toLowerCase();\n      if (stateText) {\n        this.setAttribute('drag-state', stateText);\n      }\n    });\n\n    this.sub('--cfg-source-list', (value) => {\n      const list = stringToArray(value);\n      // Enable drop area if local files are allowed\n      this.$.isEnabled = list.includes(UploaderBlock.sourceTypes.LOCAL);\n      // Show drop area if it's enabled or default slot is overrided\n      this.$.isVisible = this.$.isEnabled || !this.querySelector('[data-default-slot]');\n    });\n\n    this.sub('isVisible', (value) => {\n      this.toggleAttribute('hidden', !value);\n    });\n\n    if (this.$.isClickable) {\n      // @private\n      this._onAreaClicked = () => {\n        this.openSystemDialog();\n      };\n      this.addEventListener('click', this._onAreaClicked);\n    }\n  }\n\n  /**\n   * Ignore drop events if there are other visible drop areas on the page\n   *\n   * @private\n   * @returns {Boolean}\n   */\n  _shouldIgnore() {\n    if (!this.$.isEnabled) {\n      return true;\n    }\n    if (!this._couldHandleFiles()) {\n      return true;\n    }\n    if (!this.$.isFullscreen) {\n      return false;\n    }\n    const otherTargets = [...this.$['lr-drop-area/targets']].filter((el) => el !== this);\n    const activeTargets = otherTargets.filter((/** @type {typeof this} */ el) => {\n      return el.isActive();\n    });\n    return activeTargets.length > 0;\n  }\n\n  /** @private */\n  _couldHandleFiles() {\n    let isMultiple = this.getCssData('--cfg-multiple');\n    let multipleMax = this.getCssData('--cfg-multiple-max');\n    let currentFilesCount = this.uploadCollection.size;\n\n    if (isMultiple && multipleMax && currentFilesCount >= multipleMax) {\n      return false;\n    }\n\n    if (!isMultiple && currentFilesCount > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  destroyCallback() {\n    super.destroyCallback();\n\n    this.$['lr-drop-area/targets']?.remove?.(this);\n\n    this._destroyDropzone?.();\n    this._destroyContentWrapperDropzone?.();\n    if (this._onAreaClicked) {\n      this.removeEventListener('click', this._onAreaClicked);\n    }\n  }\n}\n\nDropArea.template = /* HTML */ `\n  <slot>\n    <div data-default-slot hidden></div>\n    <div ref=\"content-wrapper\" class=\"content-wrapper\" set=\"@hidden: !isVisible\">\n      <div class=\"icon-container\" set=\"@hidden: !withIcon\">\n        <lr-icon name=\"default\"></lr-icon>\n        <lr-icon name=\"arrow-down\"></lr-icon>\n      </div>\n      <span class=\"text\">{{text}}</span>\n    </div>\n  </slot>\n`;\n\nDropArea.bindAttributes({\n  'with-icon': null,\n  clickable: null,\n  text: null,\n  fullscreen: null,\n  disabled: null,\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}