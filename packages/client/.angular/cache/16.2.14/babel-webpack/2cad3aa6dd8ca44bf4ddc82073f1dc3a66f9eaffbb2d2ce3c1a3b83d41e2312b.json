{"ast":null,"code":"import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { UiMessage } from '../MessageBox/MessageBox.js';\nimport { EVENT_TYPES, EventData, EventManager } from '../../abstract/EventManager.js';\nimport { debounce } from '../utils/debounce.js';\nexport class UploadList extends UploaderBlock {\n  historyTracked = true;\n  activityType = ActivityBlock.activities.UPLOAD_LIST;\n  init$ = {\n    ...this.init$,\n    doneBtnVisible: false,\n    doneBtnEnabled: false,\n    uploadBtnVisible: false,\n    addMoreBtnVisible: false,\n    addMoreBtnEnabled: false,\n    headerText: '',\n    hasFiles: false,\n    onAdd: () => {\n      this.initFlow(true);\n    },\n    onUpload: () => {\n      this.uploadAll();\n      this._updateUploadsState();\n    },\n    onDone: () => {\n      this.doneFlow();\n    },\n    onCancel: () => {\n      let data = this.getOutputData(dataItem => {\n        return !!dataItem.getValue('fileInfo');\n      });\n      EventManager.emit(new EventData({\n        type: EVENT_TYPES.REMOVE,\n        ctx: this.ctxName,\n        data\n      }));\n      this.uploadCollection.clearAll();\n    }\n  };\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-multiple': 1,\n    '--cfg-multiple-min': 0,\n    '--cfg-multiple-max': 0\n  };\n  _debouncedHandleCollectionUpdate = debounce(() => {\n    if (!this.isConnected) {\n      return;\n    }\n    this._updateUploadsState();\n    this._updateCountLimitMessage();\n  }, 0);\n\n  /**\n   * @private\n   * @returns {{ passed: Boolean; tooFew: Boolean; tooMany: Boolean; exact: Boolean; min: Number; max: Number }}\n   */\n  _validateFilesCount() {\n    let multiple = !!this.getCssData('--cfg-multiple');\n    let min = multiple ? this.getCssData('--cfg-multiple-min') ?? 0 : 1;\n    let max = multiple ? this.getCssData('--cfg-multiple-max') ?? 0 : 1;\n    let count = this.uploadCollection.size;\n    let tooFew = min ? count < min : false;\n    let tooMany = max ? count > max : false;\n    let passed = !tooFew && !tooMany;\n    let exact = max === count;\n    return {\n      passed,\n      tooFew,\n      tooMany,\n      min,\n      max,\n      exact\n    };\n  }\n\n  /** @private */\n  _updateCountLimitMessage() {\n    let filesCount = this.uploadCollection.size;\n    let countValidationResult = this._validateFilesCount();\n    if (filesCount && !countValidationResult.passed) {\n      let msg = new UiMessage();\n      let textKey = countValidationResult.tooFew ? 'files-count-limit-error-too-few' : 'files-count-limit-error-too-many';\n      msg.caption = this.l10n('files-count-limit-error-title');\n      msg.text = this.l10n(textKey, {\n        min: countValidationResult.min,\n        max: countValidationResult.max,\n        total: filesCount\n      });\n      msg.isError = true;\n      this.set$({\n        '*message': msg\n      });\n    }\n  }\n\n  /** @private */\n  _updateUploadsState() {\n    let itemIds = this.uploadCollection.items();\n    let filesCount = itemIds.length;\n    let summary = {\n      total: filesCount,\n      succeed: 0,\n      uploading: 0,\n      failed: 0\n    };\n    for (let id of itemIds) {\n      let item = this.uploadCollection.read(id);\n      if (item.getValue('fileInfo') && !item.getValue('validationErrorMsg')) {\n        summary.succeed += 1;\n      }\n      if (item.getValue('isUploading')) {\n        summary.uploading += 1;\n      }\n      if (item.getValue('validationErrorMsg') || item.getValue('uploadError')) {\n        summary.failed += 1;\n      }\n    }\n    let allDone = summary.total === summary.succeed + summary.failed;\n    let {\n      passed: fitCountRestrictions,\n      tooMany,\n      exact\n    } = this._validateFilesCount();\n    let fitValidation = summary.failed === 0;\n    let doneBtnEnabled = summary.total > 0 && fitCountRestrictions && fitValidation;\n    let uploadBtnVisible = !allDone && summary.total - summary.succeed - summary.uploading - summary.failed > 0 && fitCountRestrictions;\n    this.set$({\n      doneBtnVisible: allDone,\n      doneBtnEnabled: doneBtnEnabled,\n      uploadBtnVisible,\n      addMoreBtnEnabled: summary.total === 0 || !tooMany && !exact,\n      addMoreBtnVisible: !exact || this.getCssData('--cfg-multiple'),\n      headerText: this._getHeaderText(summary)\n    });\n  }\n\n  /** @private */\n  _getHeaderText(summary) {\n    const localizedText = status => {\n      const count = summary[status];\n      return this.l10n(`header-${status}`, {\n        count: count\n      });\n    };\n    if (summary.uploading > 0) {\n      return localizedText('uploading');\n    }\n    if (summary.failed > 0) {\n      return localizedText('failed');\n    }\n    if (summary.succeed > 0) {\n      return localizedText('succeed');\n    }\n    return localizedText('total');\n  }\n  initCallback() {\n    super.initCallback();\n    this.registerActivity(this.activityType);\n    this.sub('--cfg-multiple', this._debouncedHandleCollectionUpdate);\n    this.sub('--cfg-multiple-min', this._debouncedHandleCollectionUpdate);\n    this.sub('--cfg-multiple-max', this._debouncedHandleCollectionUpdate);\n    this.sub('*currentActivity', currentActivity => {\n      if (this.uploadCollection?.size === 0 && !this.getCssData('--cfg-show-empty-list') && currentActivity === this.activityType) {\n        this.$['*currentActivity'] = this.initActivity;\n      }\n    });\n\n    // TODO: could be performance issue on many files\n    // there is no need to update buttons state on every progress tick\n    this.uploadCollection.observe(this._debouncedHandleCollectionUpdate);\n    this.sub('*uploadList', list => {\n      this._debouncedHandleCollectionUpdate();\n      this.set$({\n        hasFiles: list.length > 0\n      });\n      if (list?.length === 0 && !this.getCssData('--cfg-show-empty-list')) {\n        this.historyBack();\n      }\n    });\n  }\n  destroyCallback() {\n    super.destroyCallback();\n    this.uploadCollection.unobserve(this._debouncedHandleCollectionUpdate);\n  }\n}\nUploadList.template = /* HTML */`\n  <lr-activity-header>\n    <span class=\"header-text\">{{headerText}}</span>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *closeModal\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n\n  <div class=\"no-files\" set=\"@hidden: hasFiles\">\n    <slot name=\"empty\"><span l10n=\"no-files\"></span></slot>\n  </div>\n\n  <div class=\"files\" repeat=\"*uploadList\" repeat-item-tag=\"lr-file-item\"></div>\n\n  <div class=\"toolbar\">\n    <button type=\"button\" class=\"cancel-btn secondary-btn\" set=\"onclick: onCancel;\" l10n=\"clear\"></button>\n    <div class=\"toolbar-spacer\"></div>\n    <button\n      type=\"button\"\n      class=\"add-more-btn secondary-btn\"\n      set=\"onclick: onAdd; @disabled: !addMoreBtnEnabled; @hidden: !addMoreBtnVisible\"\n    >\n      <lr-icon name=\"add\"></lr-icon><span l10n=\"add-more\"></span>\n    </button>\n    <button\n      type=\"button\"\n      class=\"upload-btn primary-btn\"\n      set=\"@hidden: !uploadBtnVisible; onclick: onUpload;\"\n      l10n=\"upload\"\n    ></button>\n    <button\n      type=\"button\"\n      class=\"done-btn primary-btn\"\n      set=\"@hidden: !doneBtnVisible; onclick: onDone;  @disabled: !doneBtnEnabled\"\n      l10n=\"done\"\n    ></button>\n  </div>\n\n  <lr-drop-area ghost></lr-drop-area>\n`;","map":{"version":3,"names":["UploaderBlock","ActivityBlock","UiMessage","EVENT_TYPES","EventData","EventManager","debounce","UploadList","historyTracked","activityType","activities","UPLOAD_LIST","init$","doneBtnVisible","doneBtnEnabled","uploadBtnVisible","addMoreBtnVisible","addMoreBtnEnabled","headerText","hasFiles","onAdd","initFlow","onUpload","uploadAll","_updateUploadsState","onDone","doneFlow","onCancel","data","getOutputData","dataItem","getValue","emit","type","REMOVE","ctx","ctxName","uploadCollection","clearAll","cssInit$","_debouncedHandleCollectionUpdate","isConnected","_updateCountLimitMessage","_validateFilesCount","multiple","getCssData","min","max","count","size","tooFew","tooMany","passed","exact","filesCount","countValidationResult","msg","textKey","caption","l10n","text","total","isError","set$","itemIds","items","length","summary","succeed","uploading","failed","id","item","read","allDone","fitCountRestrictions","fitValidation","_getHeaderText","localizedText","status","initCallback","registerActivity","sub","currentActivity","$","initActivity","observe","list","historyBack","destroyCallback","unobserve","template"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/UploadList/UploadList.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { UiMessage } from '../MessageBox/MessageBox.js';\nimport { EVENT_TYPES, EventData, EventManager } from '../../abstract/EventManager.js';\nimport { debounce } from '../utils/debounce.js';\n\nexport class UploadList extends UploaderBlock {\n  historyTracked = true;\n  activityType = ActivityBlock.activities.UPLOAD_LIST;\n\n  init$ = {\n    ...this.init$,\n    doneBtnVisible: false,\n    doneBtnEnabled: false,\n    uploadBtnVisible: false,\n    addMoreBtnVisible: false,\n    addMoreBtnEnabled: false,\n    headerText: '',\n\n    hasFiles: false,\n    onAdd: () => {\n      this.initFlow(true);\n    },\n    onUpload: () => {\n      this.uploadAll();\n      this._updateUploadsState();\n    },\n    onDone: () => {\n      this.doneFlow();\n    },\n    onCancel: () => {\n      let data = this.getOutputData((dataItem) => {\n        return !!dataItem.getValue('fileInfo');\n      });\n      EventManager.emit(\n        new EventData({\n          type: EVENT_TYPES.REMOVE,\n          ctx: this.ctxName,\n          data,\n        })\n      );\n      this.uploadCollection.clearAll();\n    },\n  };\n\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-multiple': 1,\n    '--cfg-multiple-min': 0,\n    '--cfg-multiple-max': 0,\n  };\n\n  _debouncedHandleCollectionUpdate = debounce(() => {\n    if (!this.isConnected) {\n      return;\n    }\n    this._updateUploadsState();\n    this._updateCountLimitMessage();\n  }, 0);\n\n  /**\n   * @private\n   * @returns {{ passed: Boolean; tooFew: Boolean; tooMany: Boolean; exact: Boolean; min: Number; max: Number }}\n   */\n  _validateFilesCount() {\n    let multiple = !!this.getCssData('--cfg-multiple');\n    let min = multiple ? this.getCssData('--cfg-multiple-min') ?? 0 : 1;\n    let max = multiple ? this.getCssData('--cfg-multiple-max') ?? 0 : 1;\n    let count = this.uploadCollection.size;\n\n    let tooFew = min ? count < min : false;\n    let tooMany = max ? count > max : false;\n    let passed = !tooFew && !tooMany;\n    let exact = max === count;\n\n    return {\n      passed,\n      tooFew,\n      tooMany,\n      min,\n      max,\n      exact,\n    };\n  }\n\n  /** @private */\n  _updateCountLimitMessage() {\n    let filesCount = this.uploadCollection.size;\n    let countValidationResult = this._validateFilesCount();\n    if (filesCount && !countValidationResult.passed) {\n      let msg = new UiMessage();\n      let textKey = countValidationResult.tooFew\n        ? 'files-count-limit-error-too-few'\n        : 'files-count-limit-error-too-many';\n      msg.caption = this.l10n('files-count-limit-error-title');\n      msg.text = this.l10n(textKey, {\n        min: countValidationResult.min,\n        max: countValidationResult.max,\n        total: filesCount,\n      });\n      msg.isError = true;\n      this.set$({\n        '*message': msg,\n      });\n    }\n  }\n\n  /** @private */\n  _updateUploadsState() {\n    let itemIds = this.uploadCollection.items();\n    let filesCount = itemIds.length;\n    let summary = {\n      total: filesCount,\n      succeed: 0,\n      uploading: 0,\n      failed: 0,\n    };\n    for (let id of itemIds) {\n      let item = this.uploadCollection.read(id);\n      if (item.getValue('fileInfo') && !item.getValue('validationErrorMsg')) {\n        summary.succeed += 1;\n      }\n      if (item.getValue('isUploading')) {\n        summary.uploading += 1;\n      }\n      if (item.getValue('validationErrorMsg') || item.getValue('uploadError')) {\n        summary.failed += 1;\n      }\n    }\n    let allDone = summary.total === summary.succeed + summary.failed;\n    let { passed: fitCountRestrictions, tooMany, exact } = this._validateFilesCount();\n    let fitValidation = summary.failed === 0;\n\n    let doneBtnEnabled = summary.total > 0 && fitCountRestrictions && fitValidation;\n    let uploadBtnVisible =\n      !allDone && summary.total - summary.succeed - summary.uploading - summary.failed > 0 && fitCountRestrictions;\n\n    this.set$({\n      doneBtnVisible: allDone,\n      doneBtnEnabled: doneBtnEnabled,\n\n      uploadBtnVisible,\n\n      addMoreBtnEnabled: summary.total === 0 || (!tooMany && !exact),\n      addMoreBtnVisible: !exact || this.getCssData('--cfg-multiple'),\n\n      headerText: this._getHeaderText(summary),\n    });\n  }\n\n  /** @private */\n  _getHeaderText(summary) {\n    const localizedText = (status) => {\n      const count = summary[status];\n      return this.l10n(`header-${status}`, {\n        count: count,\n      });\n    };\n    if (summary.uploading > 0) {\n      return localizedText('uploading');\n    }\n    if (summary.failed > 0) {\n      return localizedText('failed');\n    }\n    if (summary.succeed > 0) {\n      return localizedText('succeed');\n    }\n\n    return localizedText('total');\n  }\n\n  initCallback() {\n    super.initCallback();\n\n    this.registerActivity(this.activityType);\n\n    this.sub('--cfg-multiple', this._debouncedHandleCollectionUpdate);\n    this.sub('--cfg-multiple-min', this._debouncedHandleCollectionUpdate);\n    this.sub('--cfg-multiple-max', this._debouncedHandleCollectionUpdate);\n\n    this.sub('*currentActivity', (currentActivity) => {\n      if (\n        this.uploadCollection?.size === 0 &&\n        !this.getCssData('--cfg-show-empty-list') &&\n        currentActivity === this.activityType\n      ) {\n        this.$['*currentActivity'] = this.initActivity;\n      }\n    });\n\n    // TODO: could be performance issue on many files\n    // there is no need to update buttons state on every progress tick\n    this.uploadCollection.observe(this._debouncedHandleCollectionUpdate);\n\n    this.sub('*uploadList', (list) => {\n      this._debouncedHandleCollectionUpdate();\n\n      this.set$({\n        hasFiles: list.length > 0,\n      });\n\n      if (list?.length === 0 && !this.getCssData('--cfg-show-empty-list')) {\n        this.historyBack();\n      }\n    });\n  }\n\n  destroyCallback() {\n    super.destroyCallback();\n    this.uploadCollection.unobserve(this._debouncedHandleCollectionUpdate);\n  }\n}\n\nUploadList.template = /* HTML */ `\n  <lr-activity-header>\n    <span class=\"header-text\">{{headerText}}</span>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *closeModal\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n\n  <div class=\"no-files\" set=\"@hidden: hasFiles\">\n    <slot name=\"empty\"><span l10n=\"no-files\"></span></slot>\n  </div>\n\n  <div class=\"files\" repeat=\"*uploadList\" repeat-item-tag=\"lr-file-item\"></div>\n\n  <div class=\"toolbar\">\n    <button type=\"button\" class=\"cancel-btn secondary-btn\" set=\"onclick: onCancel;\" l10n=\"clear\"></button>\n    <div class=\"toolbar-spacer\"></div>\n    <button\n      type=\"button\"\n      class=\"add-more-btn secondary-btn\"\n      set=\"onclick: onAdd; @disabled: !addMoreBtnEnabled; @hidden: !addMoreBtnVisible\"\n    >\n      <lr-icon name=\"add\"></lr-icon><span l10n=\"add-more\"></span>\n    </button>\n    <button\n      type=\"button\"\n      class=\"upload-btn primary-btn\"\n      set=\"@hidden: !uploadBtnVisible; onclick: onUpload;\"\n      l10n=\"upload\"\n    ></button>\n    <button\n      type=\"button\"\n      class=\"done-btn primary-btn\"\n      set=\"@hidden: !doneBtnVisible; onclick: onDone;  @disabled: !doneBtnEnabled\"\n      l10n=\"done\"\n    ></button>\n  </div>\n\n  <lr-drop-area ghost></lr-drop-area>\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}