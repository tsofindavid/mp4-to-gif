{"ast":null,"code":"import { Data, UID } from '@symbiotejs/symbiote';\nimport { TypedData } from './TypedData.js';\nexport class TypedCollection {\n  /**\n   * @param {Object} options\n   * @param {Object<string, { type: any; value: any }>} options.typedSchema\n   * @param {String[]} [options.watchList]\n   * @param {(list: string[], added: Set<any>, removed: Set<any>) => void} [options.handler]\n   * @param {String} [options.ctxName]\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {Object<string, { type: any; value: any }>}\n     */\n    this.__typedSchema = options.typedSchema;\n    /**\n     * @private\n     * @type {String}\n     */\n    this.__ctxId = options.ctxName || UID.generate();\n    /**\n     * @private\n     * @type {Data}\n     */\n    this.__data = Data.registerCtx({}, this.__ctxId);\n    /**\n     * @private\n     * @type {string[]}\n     */\n    this.__watchList = options.watchList || [];\n    /**\n     * @private\n     * @type {(list: string[], added: Set<any>, removed: Set<any>) => void}\n     */\n    this.__handler = options.handler || null;\n    /**\n     * @private\n     * @type {Object<string, any>}\n     */\n    this.__subsMap = Object.create(null);\n    /**\n     * @private\n     * @type {Set}\n     */\n    this.__observers = new Set();\n    /**\n     * @private\n     * @type {Set<string>}\n     */\n    this.__items = new Set();\n    /**\n     * @private\n     * @type {Set<any>}\n     */\n    this.__removed = new Set();\n    /**\n     * @private\n     * @type {Set<any>}\n     */\n    this.__added = new Set();\n    let changeMap = Object.create(null);\n\n    /**\n     * @private\n     * @param {String} propName\n     * @param {String} ctxId\n     */\n    this.__notifyObservers = (propName, ctxId) => {\n      if (this.__observeTimeout) {\n        window.clearTimeout(this.__observeTimeout);\n      }\n      if (!changeMap[propName]) {\n        changeMap[propName] = new Set();\n      }\n      changeMap[propName].add(ctxId);\n      /** @private */\n      this.__observeTimeout = window.setTimeout(() => {\n        this.__observers.forEach(handler => {\n          handler({\n            ...changeMap\n          });\n        });\n        changeMap = Object.create(null);\n      });\n    };\n  }\n  notify() {\n    if (this.__notifyTimeout) {\n      window.clearTimeout(this.__notifyTimeout);\n    }\n    /** @private */\n    this.__notifyTimeout = window.setTimeout(() => {\n      let added = this.__added;\n      let removed = this.__removed;\n      this.__added.clear();\n      this.__removed.clear();\n      this.__handler?.([...this.__items], added, removed);\n    });\n  }\n\n  /**\n   * @param {Object<string, any>} init\n   * @returns {any}\n   */\n  add(init) {\n    let item = new TypedData(this.__typedSchema);\n    for (let prop in init) {\n      item.setValue(prop, init[prop]);\n    }\n    this.__data.add(item.uid, item);\n    this.__added.add(item);\n    this.__watchList.forEach(propName => {\n      if (!this.__subsMap[item.uid]) {\n        this.__subsMap[item.uid] = [];\n      }\n      this.__subsMap[item.uid].push(item.subscribe(propName, () => {\n        this.__notifyObservers(propName, item.uid);\n      }));\n    });\n    this.__items.add(item.uid);\n    this.notify();\n    return item;\n  }\n\n  /**\n   * @param {String} id\n   * @returns {TypedData}\n   */\n  read(id) {\n    return this.__data.read(id);\n  }\n\n  /**\n   * @param {String} id\n   * @param {String} propName\n   * @returns {any}\n   */\n  readProp(id, propName) {\n    let item = this.read(id);\n    return item.getValue(propName);\n  }\n\n  /**\n   * @template T\n   * @param {String} id\n   * @param {String} propName\n   * @param {T} value\n   */\n  publishProp(id, propName, value) {\n    let item = this.read(id);\n    item.setValue(propName, value);\n  }\n\n  /** @param {String} id */\n  remove(id) {\n    this.__removed.add(this.__data.read(id));\n    this.__items.delete(id);\n    this.notify();\n    this.__data.pub(id, null);\n    delete this.__subsMap[id];\n  }\n  clearAll() {\n    this.__items.forEach(id => {\n      this.remove(id);\n    });\n  }\n\n  /** @param {Function} handler */\n  observe(handler) {\n    this.__observers.add(handler);\n  }\n\n  /** @param {Function} handler */\n  unobserve(handler) {\n    this.__observers.delete(handler);\n  }\n\n  /**\n   * @param {(item: TypedData) => Boolean} checkFn\n   * @returns {String[]}\n   */\n  findItems(checkFn) {\n    let result = [];\n    this.__items.forEach(id => {\n      let item = this.read(id);\n      if (checkFn(item)) {\n        result.push(id);\n      }\n    });\n    return result;\n  }\n  items() {\n    return [...this.__items];\n  }\n  get size() {\n    return this.__items.size;\n  }\n  destroy() {\n    Data.deleteCtx(this.__data);\n    this.__observers = null;\n    for (let id in this.__subsMap) {\n      this.__subsMap[id].forEach(sub => {\n        sub.remove();\n      });\n      delete this.__subsMap[id];\n    }\n  }\n}","map":{"version":3,"names":["Data","UID","TypedData","TypedCollection","constructor","options","__typedSchema","typedSchema","__ctxId","ctxName","generate","__data","registerCtx","__watchList","watchList","__handler","handler","__subsMap","Object","create","__observers","Set","__items","__removed","__added","changeMap","__notifyObservers","propName","ctxId","__observeTimeout","window","clearTimeout","add","setTimeout","forEach","notify","__notifyTimeout","added","removed","clear","init","item","prop","setValue","uid","push","subscribe","read","id","readProp","getValue","publishProp","value","remove","delete","pub","clearAll","observe","unobserve","findItems","checkFn","result","items","size","destroy","deleteCtx","sub"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/abstract/TypedCollection.js"],"sourcesContent":["import { Data, UID } from '@symbiotejs/symbiote';\nimport { TypedData } from './TypedData.js';\n\nexport class TypedCollection {\n  /**\n   * @param {Object} options\n   * @param {Object<string, { type: any; value: any }>} options.typedSchema\n   * @param {String[]} [options.watchList]\n   * @param {(list: string[], added: Set<any>, removed: Set<any>) => void} [options.handler]\n   * @param {String} [options.ctxName]\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {Object<string, { type: any; value: any }>}\n     */\n    this.__typedSchema = options.typedSchema;\n    /**\n     * @private\n     * @type {String}\n     */\n    this.__ctxId = options.ctxName || UID.generate();\n    /**\n     * @private\n     * @type {Data}\n     */\n    this.__data = Data.registerCtx({}, this.__ctxId);\n    /**\n     * @private\n     * @type {string[]}\n     */\n    this.__watchList = options.watchList || [];\n    /**\n     * @private\n     * @type {(list: string[], added: Set<any>, removed: Set<any>) => void}\n     */\n    this.__handler = options.handler || null;\n    /**\n     * @private\n     * @type {Object<string, any>}\n     */\n    this.__subsMap = Object.create(null);\n    /**\n     * @private\n     * @type {Set}\n     */\n    this.__observers = new Set();\n    /**\n     * @private\n     * @type {Set<string>}\n     */\n    this.__items = new Set();\n    /**\n     * @private\n     * @type {Set<any>}\n     */\n    this.__removed = new Set();\n    /**\n     * @private\n     * @type {Set<any>}\n     */\n    this.__added = new Set();\n\n    let changeMap = Object.create(null);\n\n    /**\n     * @private\n     * @param {String} propName\n     * @param {String} ctxId\n     */\n    this.__notifyObservers = (propName, ctxId) => {\n      if (this.__observeTimeout) {\n        window.clearTimeout(this.__observeTimeout);\n      }\n      if (!changeMap[propName]) {\n        changeMap[propName] = new Set();\n      }\n      changeMap[propName].add(ctxId);\n      /** @private */\n      this.__observeTimeout = window.setTimeout(() => {\n        this.__observers.forEach((handler) => {\n          handler({ ...changeMap });\n        });\n        changeMap = Object.create(null);\n      });\n    };\n  }\n\n  notify() {\n    if (this.__notifyTimeout) {\n      window.clearTimeout(this.__notifyTimeout);\n    }\n    /** @private */\n    this.__notifyTimeout = window.setTimeout(() => {\n      let added = this.__added;\n      let removed = this.__removed;\n      this.__added.clear();\n      this.__removed.clear();\n      this.__handler?.([...this.__items], added, removed);\n    });\n  }\n\n  /**\n   * @param {Object<string, any>} init\n   * @returns {any}\n   */\n  add(init) {\n    let item = new TypedData(this.__typedSchema);\n    for (let prop in init) {\n      item.setValue(prop, init[prop]);\n    }\n    this.__data.add(item.uid, item);\n    this.__added.add(item);\n    this.__watchList.forEach((propName) => {\n      if (!this.__subsMap[item.uid]) {\n        this.__subsMap[item.uid] = [];\n      }\n      this.__subsMap[item.uid].push(\n        item.subscribe(propName, () => {\n          this.__notifyObservers(propName, item.uid);\n        })\n      );\n    });\n    this.__items.add(item.uid);\n    this.notify();\n    return item;\n  }\n\n  /**\n   * @param {String} id\n   * @returns {TypedData}\n   */\n  read(id) {\n    return this.__data.read(id);\n  }\n\n  /**\n   * @param {String} id\n   * @param {String} propName\n   * @returns {any}\n   */\n  readProp(id, propName) {\n    let item = this.read(id);\n    return item.getValue(propName);\n  }\n\n  /**\n   * @template T\n   * @param {String} id\n   * @param {String} propName\n   * @param {T} value\n   */\n  publishProp(id, propName, value) {\n    let item = this.read(id);\n    item.setValue(propName, value);\n  }\n\n  /** @param {String} id */\n  remove(id) {\n    this.__removed.add(this.__data.read(id));\n    this.__items.delete(id);\n    this.notify();\n    this.__data.pub(id, null);\n    delete this.__subsMap[id];\n  }\n\n  clearAll() {\n    this.__items.forEach((id) => {\n      this.remove(id);\n    });\n  }\n\n  /** @param {Function} handler */\n  observe(handler) {\n    this.__observers.add(handler);\n  }\n\n  /** @param {Function} handler */\n  unobserve(handler) {\n    this.__observers.delete(handler);\n  }\n\n  /**\n   * @param {(item: TypedData) => Boolean} checkFn\n   * @returns {String[]}\n   */\n  findItems(checkFn) {\n    let result = [];\n    this.__items.forEach((id) => {\n      let item = this.read(id);\n      if (checkFn(item)) {\n        result.push(id);\n      }\n    });\n    return result;\n  }\n\n  items() {\n    return [...this.__items];\n  }\n\n  get size() {\n    return this.__items.size;\n  }\n\n  destroy() {\n    Data.deleteCtx(this.__data);\n    this.__observers = null;\n    for (let id in this.__subsMap) {\n      this.__subsMap[id].forEach((sub) => {\n        sub.remove();\n      });\n      delete this.__subsMap[id];\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}