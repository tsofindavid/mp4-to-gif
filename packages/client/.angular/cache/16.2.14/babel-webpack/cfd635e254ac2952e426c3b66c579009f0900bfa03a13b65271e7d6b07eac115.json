{"ast":null,"code":"import _asyncToGenerator from \"/Users/David/Documents/own_projects/mp4-to-gif/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { create } from '@symbiotejs/symbiote';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { stringToArray } from '../../utils/stringToArray.js';\nimport { wildcardRegexp } from '../../utils/wildcardRegexp.js';\nimport { buildStyles } from './buildStyles.js';\nimport { registerMessage, unregisterMessage } from './messages.js';\nimport { queryString } from './query-string.js';\n/**\n * @typedef {Object} ActivityParams\n * @property {String} externalSourceType\n */\n\nexport class ExternalSource extends UploaderBlock {\n  activityType = ActivityBlock.activities.EXTERNAL;\n  init$ = {\n    ...this.init$,\n    activityIcon: '',\n    activityCaption: '',\n    counter: 0,\n    onDone: () => {\n      this.$['*currentActivity'] = ActivityBlock.activities.UPLOAD_LIST;\n    },\n    onCancel: () => {\n      this.historyBack();\n    }\n  };\n\n  /** @private */\n  _iframe = null;\n  initCallback() {\n    super.initCallback();\n    this.registerActivity(this.activityType, {\n      onActivate: () => {\n        let {\n          externalSourceType\n        } = /** @type {ActivityParams} */this.activityParams;\n        this.set$({\n          activityCaption: `${externalSourceType?.[0].toUpperCase()}${externalSourceType?.slice(1)}`,\n          activityIcon: externalSourceType\n        });\n        this.$.counter = 0;\n        this.mountIframe();\n      }\n    });\n    this.sub('*currentActivity', val => {\n      if (val !== this.activityType) {\n        this.unmountIframe();\n      }\n    });\n  }\n  sendMessage(message) {\n    this._iframe.contentWindow.postMessage(JSON.stringify(message), '*');\n  }\n  handleFileSelected(message) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.$.counter = _this.$.counter + 1;\n      const url = (() => {\n        if (message.alternatives) {\n          const preferredTypes = stringToArray(_this.getCssData('--cfg-external-sources-preferred-types'));\n          for (const preferredType of preferredTypes) {\n            const regexp = wildcardRegexp(preferredType);\n            for (const [type, typeUrl] of Object.entries(message.alternatives)) {\n              if (regexp.test(type)) {\n                return typeUrl;\n              }\n            }\n          }\n        }\n        return message.url;\n      })();\n      let {\n        filename\n      } = message;\n      let {\n        externalSourceType\n      } = _this.activityParams;\n      _this.addFileFromUrl(url, {\n        fileName: filename,\n        source: `${UploadSource.EXTERNAL}-${externalSourceType}`\n      });\n    })();\n  }\n  handleIframeLoad() {\n    this.applyStyles();\n  }\n  _inheritedUpdateCssData = this.updateCssData;\n  updateCssData = () => {\n    if (this.isActivityActive) {\n      this._inheritedUpdateCssData();\n      this.applyStyles();\n    }\n  };\n  getCssValue(propName) {\n    let style = window.getComputedStyle(this);\n    return style.getPropertyValue(propName).trim();\n  }\n  applyStyles() {\n    let colors = {\n      backgroundColor: this.getCssValue('--clr-background-light'),\n      textColor: this.getCssValue('--clr-txt'),\n      shadeColor: this.getCssValue('--clr-shade-lv1'),\n      linkColor: '#157cfc',\n      linkColorHover: '#3891ff'\n    };\n    this.sendMessage({\n      type: 'embed-css',\n      style: buildStyles(colors)\n    });\n  }\n  remoteUrl() {\n    let pubkey = this.getCssData('--cfg-pubkey');\n    let imagesOnly = false.toString();\n    let {\n      externalSourceType\n    } = this.activityParams;\n    let params = {\n      lang: this.getCssData('--l10n-locale-name')?.split('-')?.[0] || 'en',\n      public_key: pubkey,\n      images_only: imagesOnly,\n      pass_window_open: false,\n      session_key: this.getCssData('--cfg-remote-tab-session-key')\n    };\n    let url = new URL(this.getCssData('--cfg-social-base-url'));\n    url.pathname = `/window3/${externalSourceType}`;\n    url.search = queryString(params);\n    return url.toString();\n  }\n  mountIframe() {\n    /** @type {HTMLIFrameElement} */\n    // @ts-ignore\n    let iframe = create({\n      tag: 'iframe',\n      attributes: {\n        src: this.remoteUrl(),\n        marginheight: 0,\n        marginwidth: 0,\n        frameborder: 0,\n        allowTransparency: true\n      }\n    });\n    iframe.addEventListener('load', this.handleIframeLoad.bind(this));\n    this.ref.iframeWrapper.innerHTML = '';\n    this.ref.iframeWrapper.appendChild(iframe);\n    registerMessage('file-selected', iframe.contentWindow, this.handleFileSelected.bind(this));\n    this._iframe = iframe;\n  }\n  unmountIframe() {\n    this._iframe && unregisterMessage('file-selected', this._iframe.contentWindow);\n    this.ref.iframeWrapper.innerHTML = '';\n    this._iframe = undefined;\n  }\n}\nExternalSource.template = /* HTML */`\n  <lr-activity-header>\n    <button type=\"button\" class=\"mini-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"back\"></lr-icon>\n    </button>\n    <div>\n      <lr-icon set=\"@name: activityIcon\"></lr-icon>\n      <span>{{activityCaption}}</span>\n    </div>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n  <div class=\"content\">\n    <div ref=\"iframeWrapper\" class=\"iframe-wrapper\"></div>\n    <div class=\"toolbar\">\n      <button type=\"button\" class=\"cancel-btn secondary-btn\" set=\"onclick: onCancel\" l10n=\"cancel\"></button>\n      <div></div>\n      <div class=\"selected-counter\"><span l10n=\"selected-count\"></span>{{counter}}</div>\n      <button type=\"button\" class=\"done-btn primary-btn\" set=\"onclick: onDone; @disabled: !counter\">\n        <lr-icon name=\"check\"></lr-icon>\n      </button>\n    </div>\n  </div>\n`;","map":{"version":3,"names":["create","ActivityBlock","UploaderBlock","stringToArray","wildcardRegexp","buildStyles","registerMessage","unregisterMessage","queryString","ExternalSource","activityType","activities","EXTERNAL","init$","activityIcon","activityCaption","counter","onDone","$","UPLOAD_LIST","onCancel","historyBack","_iframe","initCallback","registerActivity","onActivate","externalSourceType","activityParams","set$","toUpperCase","slice","mountIframe","sub","val","unmountIframe","sendMessage","message","contentWindow","postMessage","JSON","stringify","handleFileSelected","_this","_asyncToGenerator","url","alternatives","preferredTypes","getCssData","preferredType","regexp","type","typeUrl","Object","entries","test","filename","addFileFromUrl","fileName","source","UploadSource","handleIframeLoad","applyStyles","_inheritedUpdateCssData","updateCssData","isActivityActive","getCssValue","propName","style","window","getComputedStyle","getPropertyValue","trim","colors","backgroundColor","textColor","shadeColor","linkColor","linkColorHover","remoteUrl","pubkey","imagesOnly","toString","params","lang","split","public_key","images_only","pass_window_open","session_key","URL","pathname","search","iframe","tag","attributes","src","marginheight","marginwidth","frameborder","allowTransparency","addEventListener","bind","ref","iframeWrapper","innerHTML","appendChild","undefined","template"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/ExternalSource/ExternalSource.js"],"sourcesContent":["import { create } from '@symbiotejs/symbiote';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { stringToArray } from '../../utils/stringToArray.js';\nimport { wildcardRegexp } from '../../utils/wildcardRegexp.js';\nimport { buildStyles } from './buildStyles.js';\nimport { registerMessage, unregisterMessage } from './messages.js';\nimport { queryString } from './query-string.js';\n/**\n * @typedef {Object} ActivityParams\n * @property {String} externalSourceType\n */\n\nexport class ExternalSource extends UploaderBlock {\n  activityType = ActivityBlock.activities.EXTERNAL;\n\n  init$ = {\n    ...this.init$,\n    activityIcon: '',\n    activityCaption: '',\n    counter: 0,\n    onDone: () => {\n      this.$['*currentActivity'] = ActivityBlock.activities.UPLOAD_LIST;\n    },\n    onCancel: () => {\n      this.historyBack();\n    },\n  };\n\n  /** @private */\n  _iframe = null;\n\n  initCallback() {\n    super.initCallback();\n    this.registerActivity(this.activityType, {\n      onActivate: () => {\n        let { externalSourceType } = /** @type {ActivityParams} */ (this.activityParams);\n\n        this.set$({\n          activityCaption: `${externalSourceType?.[0].toUpperCase()}${externalSourceType?.slice(1)}`,\n          activityIcon: externalSourceType,\n        });\n\n        this.$.counter = 0;\n        this.mountIframe();\n      },\n    });\n    this.sub('*currentActivity', (val) => {\n      if (val !== this.activityType) {\n        this.unmountIframe();\n      }\n    });\n  }\n\n  sendMessage(message) {\n    this._iframe.contentWindow.postMessage(JSON.stringify(message), '*');\n  }\n\n  async handleFileSelected(message) {\n    this.$.counter = this.$.counter + 1;\n\n    const url = (() => {\n      if (message.alternatives) {\n        const preferredTypes = stringToArray(this.getCssData('--cfg-external-sources-preferred-types'));\n        for (const preferredType of preferredTypes) {\n          const regexp = wildcardRegexp(preferredType);\n          for (const [type, typeUrl] of Object.entries(message.alternatives)) {\n            if (regexp.test(type)) {\n              return typeUrl;\n            }\n          }\n        }\n      }\n      return message.url;\n    })();\n\n    let { filename } = message;\n    let { externalSourceType } = this.activityParams;\n    this.addFileFromUrl(url, { fileName: filename, source: `${UploadSource.EXTERNAL}-${externalSourceType}` });\n  }\n\n  handleIframeLoad() {\n    this.applyStyles();\n  }\n\n  _inheritedUpdateCssData = this.updateCssData;\n  updateCssData = () => {\n    if (this.isActivityActive) {\n      this._inheritedUpdateCssData();\n      this.applyStyles();\n    }\n  };\n\n  getCssValue(propName) {\n    let style = window.getComputedStyle(this);\n    return style.getPropertyValue(propName).trim();\n  }\n\n  applyStyles() {\n    let colors = {\n      backgroundColor: this.getCssValue('--clr-background-light'),\n      textColor: this.getCssValue('--clr-txt'),\n      shadeColor: this.getCssValue('--clr-shade-lv1'),\n      linkColor: '#157cfc',\n      linkColorHover: '#3891ff',\n    };\n\n    this.sendMessage({\n      type: 'embed-css',\n      style: buildStyles(colors),\n    });\n  }\n\n  remoteUrl() {\n    let pubkey = this.getCssData('--cfg-pubkey');\n    let imagesOnly = false.toString();\n    let { externalSourceType } = this.activityParams;\n    let params = {\n      lang: this.getCssData('--l10n-locale-name')?.split('-')?.[0] || 'en',\n      public_key: pubkey,\n      images_only: imagesOnly,\n      pass_window_open: false,\n      session_key: this.getCssData('--cfg-remote-tab-session-key'),\n    };\n    let url = new URL(this.getCssData('--cfg-social-base-url'));\n    url.pathname = `/window3/${externalSourceType}`;\n    url.search = queryString(params);\n    return url.toString();\n  }\n\n  mountIframe() {\n    /** @type {HTMLIFrameElement} */\n    // @ts-ignore\n    let iframe = create({\n      tag: 'iframe',\n      attributes: {\n        src: this.remoteUrl(),\n        marginheight: 0,\n        marginwidth: 0,\n        frameborder: 0,\n        allowTransparency: true,\n      },\n    });\n    iframe.addEventListener('load', this.handleIframeLoad.bind(this));\n\n    this.ref.iframeWrapper.innerHTML = '';\n    this.ref.iframeWrapper.appendChild(iframe);\n\n    registerMessage('file-selected', iframe.contentWindow, this.handleFileSelected.bind(this));\n\n    this._iframe = iframe;\n  }\n\n  unmountIframe() {\n    this._iframe && unregisterMessage('file-selected', this._iframe.contentWindow);\n    this.ref.iframeWrapper.innerHTML = '';\n    this._iframe = undefined;\n  }\n}\n\nExternalSource.template = /* HTML */ `\n  <lr-activity-header>\n    <button type=\"button\" class=\"mini-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"back\"></lr-icon>\n    </button>\n    <div>\n      <lr-icon set=\"@name: activityIcon\"></lr-icon>\n      <span>{{activityCaption}}</span>\n    </div>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n  <div class=\"content\">\n    <div ref=\"iframeWrapper\" class=\"iframe-wrapper\"></div>\n    <div class=\"toolbar\">\n      <button type=\"button\" class=\"cancel-btn secondary-btn\" set=\"onclick: onCancel\" l10n=\"cancel\"></button>\n      <div></div>\n      <div class=\"selected-counter\"><span l10n=\"selected-count\"></span>{{counter}}</div>\n      <button type=\"button\" class=\"done-btn primary-btn\" set=\"onclick: onDone; @disabled: !counter\">\n        <lr-icon name=\"check\"></lr-icon>\n      </button>\n    </div>\n  </div>\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}