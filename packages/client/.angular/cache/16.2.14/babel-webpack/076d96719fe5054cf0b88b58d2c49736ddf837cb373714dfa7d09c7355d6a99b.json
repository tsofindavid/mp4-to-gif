{"ast":null,"code":"import { Modal } from '../blocks/Modal/Modal.js';\nimport { debounce } from '../blocks/utils/debounce.js';\nimport { Block } from './Block.js';\nimport { activityBlockCtx } from './CTX.js';\nconst ACTIVE_ATTR = 'active';\nconst ACTIVE_PROP = '___ACTIVITY_IS_ACTIVE___';\nexport class ActivityBlock extends Block {\n  historyTracked = false;\n  init$ = activityBlockCtx(this);\n  _debouncedHistoryFlush = debounce(this._historyFlush.bind(this), 10);\n\n  /** @private */\n  _deactivate() {\n    let actDesc = ActivityBlock._activityRegistry[this.activityKey];\n    this[ACTIVE_PROP] = false;\n    this.removeAttribute(ACTIVE_ATTR);\n    actDesc?.deactivateCallback?.();\n    // console.log(`Activity \"${this.activityType}\" deactivated`);\n  }\n\n  /** @private */\n  _activate() {\n    let actDesc = ActivityBlock._activityRegistry[this.activityKey];\n    this.$['*historyBack'] = this.historyBack.bind(this);\n    /** @private */\n    this[ACTIVE_PROP] = true;\n    this.setAttribute(ACTIVE_ATTR, '');\n    actDesc?.activateCallback?.();\n    // console.log(`Activity \"${this.activityType}\" activated`);\n\n    this._debouncedHistoryFlush();\n  }\n  initCallback() {\n    super.initCallback();\n    if (this.hasAttribute('current-activity')) {\n      this.sub('*currentActivity', ( /** @type {String} */val) => {\n        this.setAttribute('current-activity', val);\n      });\n    }\n\n    // TODO: rename activityType to activityId\n    if (this.activityType) {\n      if (!this.hasAttribute('activity')) {\n        this.setAttribute('activity', this.activityType);\n      }\n      this.sub('*currentActivity', ( /** @type {String} */val) => {\n        if (this.activityType !== val && this[ACTIVE_PROP]) {\n          this._deactivate();\n        } else if (this.activityType === val && !this[ACTIVE_PROP]) {\n          this._activate();\n        }\n        if (!val) {\n          this.$['*history'] = [];\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _historyFlush() {\n    let history = this.$['*history'];\n    if (history) {\n      if (history.length > 10) {\n        history = history.slice(history.length - 11, history.length - 1);\n      }\n      if (this.historyTracked) {\n        history.push(this.activityType);\n      }\n      this.$['*history'] = history;\n    }\n  }\n\n  /** @private */\n  _isActivityRegistered() {\n    return this.activityType && !!ActivityBlock._activityRegistry[this.activityKey];\n  }\n\n  /**\n   * @private\n   * @type {{ String: { activateCallback: Function; deactivateCallback: Function } }}\n   */\n  static _activityRegistry = Object.create(null);\n  get isActivityActive() {\n    return this[ACTIVE_PROP];\n  }\n\n  /**\n   * TODO: remove name argument\n   *\n   * @param {String} name\n   * @param {Object} [options]\n   * @param {() => void} [options.onActivate]\n   * @param {() => void} [options.onDeactivate]\n   */\n  registerActivity(name, options = {}) {\n    const {\n      onActivate,\n      onDeactivate\n    } = options;\n    if (!ActivityBlock._activityRegistry) {\n      ActivityBlock._activityRegistry = Object.create(null);\n    }\n    ActivityBlock._activityRegistry[this.activityKey] = {\n      activateCallback: onActivate,\n      deactivateCallback: onDeactivate\n    };\n  }\n  unregisterActivity() {\n    if (this.isActivityActive) {\n      this._deactivate();\n    }\n    ActivityBlock._activityRegistry[this.activityKey] = undefined;\n  }\n  destroyCallback() {\n    super.destroyCallback();\n    this._isActivityRegistered() && this.unregisterActivity();\n    if (Object.keys(ActivityBlock._activityRegistry).length === 0) {\n      // TODO: we should track activities more precise and reset current activity only if there is no such registered activity\n      this.$['*currentActivity'] = null;\n    }\n  }\n  get activityKey() {\n    return this.ctxName + this.activityType;\n  }\n  get activityParams() {\n    return this.$['*currentActivityParams'];\n  }\n\n  /** @type {String} */\n  get initActivity() {\n    return this.getCssData('--cfg-init-activity');\n  }\n\n  /** @type {String} */\n  get doneActivity() {\n    return this.getCssData('--cfg-done-activity');\n  }\n  historyBack() {\n    /** @type {String[]} */\n    let history = this.$['*history'];\n    if (history) {\n      let nextActivity = history.pop();\n      while (nextActivity === this.activityType) {\n        nextActivity = history.pop();\n      }\n      this.$['*currentActivity'] = nextActivity;\n      this.$['*history'] = history;\n      if (!nextActivity) {\n        this.setForCtxTarget(Modal.StateConsumerScope, '*modalActive', false);\n      }\n    }\n  }\n}\n\n/** @enum {String} */\nActivityBlock.activities = Object.freeze({\n  START_FROM: 'start-from',\n  CAMERA: 'camera',\n  DRAW: 'draw',\n  UPLOAD_LIST: 'upload-list',\n  URL: 'url',\n  CONFIRMATION: 'confirmation',\n  CLOUD_IMG_EDIT: 'cloud-image-edit',\n  EXTERNAL: 'external',\n  DETAILS: 'details'\n});","map":{"version":3,"names":["Modal","debounce","Block","activityBlockCtx","ACTIVE_ATTR","ACTIVE_PROP","ActivityBlock","historyTracked","init$","_debouncedHistoryFlush","_historyFlush","bind","_deactivate","actDesc","_activityRegistry","activityKey","removeAttribute","deactivateCallback","_activate","$","historyBack","setAttribute","activateCallback","initCallback","hasAttribute","sub","val","activityType","history","length","slice","push","_isActivityRegistered","Object","create","isActivityActive","registerActivity","name","options","onActivate","onDeactivate","unregisterActivity","undefined","destroyCallback","keys","ctxName","activityParams","initActivity","getCssData","doneActivity","nextActivity","pop","setForCtxTarget","StateConsumerScope","activities","freeze","START_FROM","CAMERA","DRAW","UPLOAD_LIST","URL","CONFIRMATION","CLOUD_IMG_EDIT","EXTERNAL","DETAILS"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/abstract/ActivityBlock.js"],"sourcesContent":["import { Modal } from '../blocks/Modal/Modal.js';\nimport { debounce } from '../blocks/utils/debounce.js';\nimport { Block } from './Block.js';\nimport { activityBlockCtx } from './CTX.js';\n\nconst ACTIVE_ATTR = 'active';\nconst ACTIVE_PROP = '___ACTIVITY_IS_ACTIVE___';\n\nexport class ActivityBlock extends Block {\n  historyTracked = false;\n  init$ = activityBlockCtx(this);\n\n  _debouncedHistoryFlush = debounce(this._historyFlush.bind(this), 10);\n\n  /** @private */\n  _deactivate() {\n    let actDesc = ActivityBlock._activityRegistry[this.activityKey];\n    this[ACTIVE_PROP] = false;\n    this.removeAttribute(ACTIVE_ATTR);\n    actDesc?.deactivateCallback?.();\n    // console.log(`Activity \"${this.activityType}\" deactivated`);\n  }\n\n  /** @private */\n  _activate() {\n    let actDesc = ActivityBlock._activityRegistry[this.activityKey];\n    this.$['*historyBack'] = this.historyBack.bind(this);\n    /** @private */\n    this[ACTIVE_PROP] = true;\n    this.setAttribute(ACTIVE_ATTR, '');\n    actDesc?.activateCallback?.();\n    // console.log(`Activity \"${this.activityType}\" activated`);\n\n    this._debouncedHistoryFlush();\n  }\n\n  initCallback() {\n    super.initCallback();\n    if (this.hasAttribute('current-activity')) {\n      this.sub('*currentActivity', (/** @type {String} */ val) => {\n        this.setAttribute('current-activity', val);\n      });\n    }\n\n    // TODO: rename activityType to activityId\n    if (this.activityType) {\n      if (!this.hasAttribute('activity')) {\n        this.setAttribute('activity', this.activityType);\n      }\n      this.sub('*currentActivity', (/** @type {String} */ val) => {\n        if (this.activityType !== val && this[ACTIVE_PROP]) {\n          this._deactivate();\n        } else if (this.activityType === val && !this[ACTIVE_PROP]) {\n          this._activate();\n        }\n\n        if (!val) {\n          this.$['*history'] = [];\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _historyFlush() {\n    let history = this.$['*history'];\n    if (history) {\n      if (history.length > 10) {\n        history = history.slice(history.length - 11, history.length - 1);\n      }\n      if (this.historyTracked) {\n        history.push(this.activityType);\n      }\n      this.$['*history'] = history;\n    }\n  }\n\n  /** @private */\n  _isActivityRegistered() {\n    return this.activityType && !!ActivityBlock._activityRegistry[this.activityKey];\n  }\n\n  /**\n   * @private\n   * @type {{ String: { activateCallback: Function; deactivateCallback: Function } }}\n   */\n  static _activityRegistry = Object.create(null);\n\n  get isActivityActive() {\n    return this[ACTIVE_PROP];\n  }\n\n  /**\n   * TODO: remove name argument\n   *\n   * @param {String} name\n   * @param {Object} [options]\n   * @param {() => void} [options.onActivate]\n   * @param {() => void} [options.onDeactivate]\n   */\n  registerActivity(name, options = {}) {\n    const { onActivate, onDeactivate } = options;\n    if (!ActivityBlock._activityRegistry) {\n      ActivityBlock._activityRegistry = Object.create(null);\n    }\n    ActivityBlock._activityRegistry[this.activityKey] = {\n      activateCallback: onActivate,\n      deactivateCallback: onDeactivate,\n    };\n  }\n\n  unregisterActivity() {\n    if (this.isActivityActive) {\n      this._deactivate();\n    }\n    ActivityBlock._activityRegistry[this.activityKey] = undefined;\n  }\n\n  destroyCallback() {\n    super.destroyCallback();\n    this._isActivityRegistered() && this.unregisterActivity();\n\n    if (Object.keys(ActivityBlock._activityRegistry).length === 0) {\n      // TODO: we should track activities more precise and reset current activity only if there is no such registered activity\n      this.$['*currentActivity'] = null;\n    }\n  }\n\n  get activityKey() {\n    return this.ctxName + this.activityType;\n  }\n\n  get activityParams() {\n    return this.$['*currentActivityParams'];\n  }\n\n  /** @type {String} */\n  get initActivity() {\n    return this.getCssData('--cfg-init-activity');\n  }\n\n  /** @type {String} */\n  get doneActivity() {\n    return this.getCssData('--cfg-done-activity');\n  }\n\n  historyBack() {\n    /** @type {String[]} */\n    let history = this.$['*history'];\n    if (history) {\n      let nextActivity = history.pop();\n      while (nextActivity === this.activityType) {\n        nextActivity = history.pop();\n      }\n      this.$['*currentActivity'] = nextActivity;\n      this.$['*history'] = history;\n      if (!nextActivity) {\n        this.setForCtxTarget(Modal.StateConsumerScope, '*modalActive', false);\n      }\n    }\n  }\n}\n\n/** @enum {String} */\nActivityBlock.activities = Object.freeze({\n  START_FROM: 'start-from',\n  CAMERA: 'camera',\n  DRAW: 'draw',\n  UPLOAD_LIST: 'upload-list',\n  URL: 'url',\n  CONFIRMATION: 'confirmation',\n  CLOUD_IMG_EDIT: 'cloud-image-edit',\n  EXTERNAL: 'external',\n  DETAILS: 'details',\n});\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,0BAA0B;AAChD,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,KAAK,QAAQ,YAAY;AAClC,SAASC,gBAAgB,QAAQ,UAAU;AAE3C,MAAMC,WAAW,GAAG,QAAQ;AAC5B,MAAMC,WAAW,GAAG,0BAA0B;AAE9C,OAAO,MAAMC,aAAa,SAASJ,KAAK,CAAC;EACvCK,cAAc,GAAG,KAAK;EACtBC,KAAK,GAAGL,gBAAgB,CAAC,IAAI,CAAC;EAE9BM,sBAAsB,GAAGR,QAAQ,CAAC,IAAI,CAACS,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;;EAEpE;EACAC,WAAWA,CAAA,EAAG;IACZ,IAAIC,OAAO,GAAGP,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC;IAC/D,IAAI,CAACV,WAAW,CAAC,GAAG,KAAK;IACzB,IAAI,CAACW,eAAe,CAACZ,WAAW,CAAC;IACjCS,OAAO,EAAEI,kBAAkB,GAAG,CAAC;IAC/B;EACF;;EAEA;EACAC,SAASA,CAAA,EAAG;IACV,IAAIL,OAAO,GAAGP,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC;IAC/D,IAAI,CAACI,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC,IAAI,CAAC;IACpD;IACA,IAAI,CAACN,WAAW,CAAC,GAAG,IAAI;IACxB,IAAI,CAACgB,YAAY,CAACjB,WAAW,EAAE,EAAE,CAAC;IAClCS,OAAO,EAAES,gBAAgB,GAAG,CAAC;IAC7B;;IAEA,IAAI,CAACb,sBAAsB,CAAC,CAAC;EAC/B;EAEAc,YAAYA,CAAA,EAAG;IACb,KAAK,CAACA,YAAY,CAAC,CAAC;IACpB,IAAI,IAAI,CAACC,YAAY,CAAC,kBAAkB,CAAC,EAAE;MACzC,IAAI,CAACC,GAAG,CAAC,kBAAkB,EAAE,EAAC,qBAAsBC,GAAG,KAAK;QAC1D,IAAI,CAACL,YAAY,CAAC,kBAAkB,EAAEK,GAAG,CAAC;MAC5C,CAAC,CAAC;IACJ;;IAEA;IACA,IAAI,IAAI,CAACC,YAAY,EAAE;MACrB,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC,UAAU,CAAC,EAAE;QAClC,IAAI,CAACH,YAAY,CAAC,UAAU,EAAE,IAAI,CAACM,YAAY,CAAC;MAClD;MACA,IAAI,CAACF,GAAG,CAAC,kBAAkB,EAAE,EAAC,qBAAsBC,GAAG,KAAK;QAC1D,IAAI,IAAI,CAACC,YAAY,KAAKD,GAAG,IAAI,IAAI,CAACrB,WAAW,CAAC,EAAE;UAClD,IAAI,CAACO,WAAW,CAAC,CAAC;QACpB,CAAC,MAAM,IAAI,IAAI,CAACe,YAAY,KAAKD,GAAG,IAAI,CAAC,IAAI,CAACrB,WAAW,CAAC,EAAE;UAC1D,IAAI,CAACa,SAAS,CAAC,CAAC;QAClB;QAEA,IAAI,CAACQ,GAAG,EAAE;UACR,IAAI,CAACP,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE;QACzB;MACF,CAAC,CAAC;IACJ;EACF;;EAEA;EACAT,aAAaA,CAAA,EAAG;IACd,IAAIkB,OAAO,GAAG,IAAI,CAACT,CAAC,CAAC,UAAU,CAAC;IAChC,IAAIS,OAAO,EAAE;MACX,IAAIA,OAAO,CAACC,MAAM,GAAG,EAAE,EAAE;QACvBD,OAAO,GAAGA,OAAO,CAACE,KAAK,CAACF,OAAO,CAACC,MAAM,GAAG,EAAE,EAAED,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;MAClE;MACA,IAAI,IAAI,CAACtB,cAAc,EAAE;QACvBqB,OAAO,CAACG,IAAI,CAAC,IAAI,CAACJ,YAAY,CAAC;MACjC;MACA,IAAI,CAACR,CAAC,CAAC,UAAU,CAAC,GAAGS,OAAO;IAC9B;EACF;;EAEA;EACAI,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACL,YAAY,IAAI,CAAC,CAACrB,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC;EACjF;;EAEA;AACF;AACA;AACA;EACE,OAAOD,iBAAiB,GAAGmB,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAE9C,IAAIC,gBAAgBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAAC9B,WAAW,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE+B,gBAAgBA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,MAAM;MAAEC,UAAU;MAAEC;IAAa,CAAC,GAAGF,OAAO;IAC5C,IAAI,CAAChC,aAAa,CAACQ,iBAAiB,EAAE;MACpCR,aAAa,CAACQ,iBAAiB,GAAGmB,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IACvD;IACA5B,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC,GAAG;MAClDO,gBAAgB,EAAEiB,UAAU;MAC5BtB,kBAAkB,EAAEuB;IACtB,CAAC;EACH;EAEAC,kBAAkBA,CAAA,EAAG;IACnB,IAAI,IAAI,CAACN,gBAAgB,EAAE;MACzB,IAAI,CAACvB,WAAW,CAAC,CAAC;IACpB;IACAN,aAAa,CAACQ,iBAAiB,CAAC,IAAI,CAACC,WAAW,CAAC,GAAG2B,SAAS;EAC/D;EAEAC,eAAeA,CAAA,EAAG;IAChB,KAAK,CAACA,eAAe,CAAC,CAAC;IACvB,IAAI,CAACX,qBAAqB,CAAC,CAAC,IAAI,IAAI,CAACS,kBAAkB,CAAC,CAAC;IAEzD,IAAIR,MAAM,CAACW,IAAI,CAACtC,aAAa,CAACQ,iBAAiB,CAAC,CAACe,MAAM,KAAK,CAAC,EAAE;MAC7D;MACA,IAAI,CAACV,CAAC,CAAC,kBAAkB,CAAC,GAAG,IAAI;IACnC;EACF;EAEA,IAAIJ,WAAWA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAC8B,OAAO,GAAG,IAAI,CAAClB,YAAY;EACzC;EAEA,IAAImB,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAAC3B,CAAC,CAAC,wBAAwB,CAAC;EACzC;;EAEA;EACA,IAAI4B,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACC,UAAU,CAAC,qBAAqB,CAAC;EAC/C;;EAEA;EACA,IAAIC,YAAYA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACD,UAAU,CAAC,qBAAqB,CAAC;EAC/C;EAEA5B,WAAWA,CAAA,EAAG;IACZ;IACA,IAAIQ,OAAO,GAAG,IAAI,CAACT,CAAC,CAAC,UAAU,CAAC;IAChC,IAAIS,OAAO,EAAE;MACX,IAAIsB,YAAY,GAAGtB,OAAO,CAACuB,GAAG,CAAC,CAAC;MAChC,OAAOD,YAAY,KAAK,IAAI,CAACvB,YAAY,EAAE;QACzCuB,YAAY,GAAGtB,OAAO,CAACuB,GAAG,CAAC,CAAC;MAC9B;MACA,IAAI,CAAChC,CAAC,CAAC,kBAAkB,CAAC,GAAG+B,YAAY;MACzC,IAAI,CAAC/B,CAAC,CAAC,UAAU,CAAC,GAAGS,OAAO;MAC5B,IAAI,CAACsB,YAAY,EAAE;QACjB,IAAI,CAACE,eAAe,CAACpD,KAAK,CAACqD,kBAAkB,EAAE,cAAc,EAAE,KAAK,CAAC;MACvE;IACF;EACF;AACF;;AAEA;AACA/C,aAAa,CAACgD,UAAU,GAAGrB,MAAM,CAACsB,MAAM,CAAC;EACvCC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,aAAa;EAC1BC,GAAG,EAAE,KAAK;EACVC,YAAY,EAAE,cAAc;EAC5BC,cAAc,EAAE,kBAAkB;EAClCC,QAAQ,EAAE,UAAU;EACpBC,OAAO,EAAE;AACX,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}