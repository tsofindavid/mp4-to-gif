{"ast":null,"code":"import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { CloudEditor } from './index.js';\nexport class CloudImageEditor extends UploaderBlock {\n  activityType = ActivityBlock.activities.CLOUD_IMG_EDIT;\n  init$ = {\n    ...this.init$,\n    cdnUrl: null\n  };\n  initCallback() {\n    super.initCallback();\n    this.bindCssData('--cfg-pubkey');\n    this.registerActivity(this.activityType, {\n      onActivate: () => this.mountEditor(),\n      onDeactivate: () => this.unmountEditor()\n    });\n    this.sub('*focusedEntry', ( /** @type {import('../../abstract/TypedData.js').TypedData} */entry) => {\n      if (!entry) {\n        return;\n      }\n      this.entry = entry;\n      this.entry.subscribe('cdnUrl', cdnUrl => {\n        if (cdnUrl) {\n          this.$.cdnUrl = cdnUrl;\n        }\n      });\n    });\n  }\n\n  /** @param {CustomEvent<import('./src/types.js').ApplyResult>} e */\n  handleApply(e) {\n    let result = e.detail;\n    this.entry.setMultipleValues({\n      cdnUrl: result.cdnUrl,\n      cdnUrlModifiers: result.cdnUrlModifiers\n    });\n    this.historyBack();\n  }\n  handleCancel() {\n    this.historyBack();\n  }\n  mountEditor() {\n    let instance = new CloudEditor();\n    instance.classList.add('lr-cldtr-common');\n    let cdnUrl = this.$.cdnUrl;\n    instance.setAttribute('cdn-url', cdnUrl);\n    instance.addEventListener('apply', result => this.handleApply(result));\n    instance.addEventListener('cancel', () => this.handleCancel());\n    this.innerHTML = '';\n    this.appendChild(instance);\n  }\n  unmountEditor() {\n    this.innerHTML = '';\n  }\n}","map":{"version":3,"names":["UploaderBlock","ActivityBlock","CloudEditor","CloudImageEditor","activityType","activities","CLOUD_IMG_EDIT","init$","cdnUrl","initCallback","bindCssData","registerActivity","onActivate","mountEditor","onDeactivate","unmountEditor","sub","entry","subscribe","$","handleApply","e","result","detail","setMultipleValues","cdnUrlModifiers","historyBack","handleCancel","instance","classList","add","setAttribute","addEventListener","innerHTML","appendChild"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/CloudImageEditor/CloudImageEditor.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { CloudEditor } from './index.js';\n\nexport class CloudImageEditor extends UploaderBlock {\n  activityType = ActivityBlock.activities.CLOUD_IMG_EDIT;\n\n  init$ = {\n    ...this.init$,\n    cdnUrl: null,\n  };\n\n  initCallback() {\n    super.initCallback();\n    this.bindCssData('--cfg-pubkey');\n\n    this.registerActivity(this.activityType, {\n      onActivate: () => this.mountEditor(),\n      onDeactivate: () => this.unmountEditor(),\n    });\n\n    this.sub('*focusedEntry', (/** @type {import('../../abstract/TypedData.js').TypedData} */ entry) => {\n      if (!entry) {\n        return;\n      }\n      this.entry = entry;\n\n      this.entry.subscribe('cdnUrl', (cdnUrl) => {\n        if (cdnUrl) {\n          this.$.cdnUrl = cdnUrl;\n        }\n      });\n    });\n  }\n\n  /** @param {CustomEvent<import('./src/types.js').ApplyResult>} e */\n  handleApply(e) {\n    let result = e.detail;\n    this.entry.setMultipleValues({\n      cdnUrl: result.cdnUrl,\n      cdnUrlModifiers: result.cdnUrlModifiers,\n    });\n    this.historyBack();\n  }\n\n  handleCancel() {\n    this.historyBack();\n  }\n\n  mountEditor() {\n    let instance = new CloudEditor();\n    instance.classList.add('lr-cldtr-common');\n    let cdnUrl = this.$.cdnUrl;\n    instance.setAttribute('cdn-url', cdnUrl);\n\n    instance.addEventListener('apply', (result) => this.handleApply(result));\n    instance.addEventListener('cancel', () => this.handleCancel());\n\n    this.innerHTML = '';\n    this.appendChild(instance);\n  }\n\n  unmountEditor() {\n    this.innerHTML = '';\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAO,MAAMC,gBAAgB,SAASH,aAAa,CAAC;EAClDI,YAAY,GAAGH,aAAa,CAACI,UAAU,CAACC,cAAc;EAEtDC,KAAK,GAAG;IACN,GAAG,IAAI,CAACA,KAAK;IACbC,MAAM,EAAE;EACV,CAAC;EAEDC,YAAYA,CAAA,EAAG;IACb,KAAK,CAACA,YAAY,CAAC,CAAC;IACpB,IAAI,CAACC,WAAW,CAAC,cAAc,CAAC;IAEhC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACP,YAAY,EAAE;MACvCQ,UAAU,EAAEA,CAAA,KAAM,IAAI,CAACC,WAAW,CAAC,CAAC;MACpCC,YAAY,EAAEA,CAAA,KAAM,IAAI,CAACC,aAAa,CAAC;IACzC,CAAC,CAAC;IAEF,IAAI,CAACC,GAAG,CAAC,eAAe,EAAE,EAAC,8DAA+DC,KAAK,KAAK;MAClG,IAAI,CAACA,KAAK,EAAE;QACV;MACF;MACA,IAAI,CAACA,KAAK,GAAGA,KAAK;MAElB,IAAI,CAACA,KAAK,CAACC,SAAS,CAAC,QAAQ,EAAGV,MAAM,IAAK;QACzC,IAAIA,MAAM,EAAE;UACV,IAAI,CAACW,CAAC,CAACX,MAAM,GAAGA,MAAM;QACxB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;EAEA;EACAY,WAAWA,CAACC,CAAC,EAAE;IACb,IAAIC,MAAM,GAAGD,CAAC,CAACE,MAAM;IACrB,IAAI,CAACN,KAAK,CAACO,iBAAiB,CAAC;MAC3BhB,MAAM,EAAEc,MAAM,CAACd,MAAM;MACrBiB,eAAe,EAAEH,MAAM,CAACG;IAC1B,CAAC,CAAC;IACF,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;EAEAC,YAAYA,CAAA,EAAG;IACb,IAAI,CAACD,WAAW,CAAC,CAAC;EACpB;EAEAb,WAAWA,CAAA,EAAG;IACZ,IAAIe,QAAQ,GAAG,IAAI1B,WAAW,CAAC,CAAC;IAChC0B,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,iBAAiB,CAAC;IACzC,IAAItB,MAAM,GAAG,IAAI,CAACW,CAAC,CAACX,MAAM;IAC1BoB,QAAQ,CAACG,YAAY,CAAC,SAAS,EAAEvB,MAAM,CAAC;IAExCoB,QAAQ,CAACI,gBAAgB,CAAC,OAAO,EAAGV,MAAM,IAAK,IAAI,CAACF,WAAW,CAACE,MAAM,CAAC,CAAC;IACxEM,QAAQ,CAACI,gBAAgB,CAAC,QAAQ,EAAE,MAAM,IAAI,CAACL,YAAY,CAAC,CAAC,CAAC;IAE9D,IAAI,CAACM,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC;EAC5B;EAEAb,aAAaA,CAAA,EAAG;IACd,IAAI,CAACkB,SAAS,GAAG,EAAE;EACrB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}