{"ast":null,"code":"/**\n * @param {string} str\n * @returns {string}\n */\nconst escapeRegExp = function (str) {\n  return str.replace(/[\\\\-\\\\[]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n};\n\n/**\n * @param {string} str\n * @param {string} flags\n * @returns {RegExp}\n */\nexport const wildcardRegexp = function (str, flags = 'i') {\n  const parts = str.split('*').map(escapeRegExp);\n  return new RegExp('^' + parts.join('.+') + '$', flags);\n};","map":{"version":3,"names":["escapeRegExp","str","replace","wildcardRegexp","flags","parts","split","map","RegExp","join"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/utils/wildcardRegexp.js"],"sourcesContent":["/**\n * @param {string} str\n * @returns {string}\n */\nconst escapeRegExp = function (str) {\n  return str.replace(/[\\\\-\\\\[]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n};\n\n/**\n * @param {string} str\n * @param {string} flags\n * @returns {RegExp}\n */\nexport const wildcardRegexp = function (str, flags = 'i') {\n  const parts = str.split('*').map(escapeRegExp);\n  return new RegExp('^' + parts.join('.+') + '$', flags);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAClC,OAAOA,GAAG,CAACC,OAAO,CAAC,sCAAsC,EAAE,MAAM,CAAC;AACpE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,SAAAA,CAAUF,GAAG,EAAEG,KAAK,GAAG,GAAG,EAAE;EACxD,MAAMC,KAAK,GAAGJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACP,YAAY,CAAC;EAC9C,OAAO,IAAIQ,MAAM,CAAC,GAAG,GAAGH,KAAK,CAACI,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAEL,KAAK,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}