{"ast":null,"code":"import _asyncToGenerator from \"/Users/David/Documents/own_projects/mp4-to-gif/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { registerBlocks } from './registerBlocks.js';\nexport const LR_WINDOW_KEY = '__lr-blocks__';\n\n/**\n * @param {String} url Blocks pack url\n * @param {Boolean} [register] Register connected package, if it not registered yet\n * @returns {Promise<import('../index.js')>}\n */\nexport function connectBlocksFrom(_x) {\n  return _connectBlocksFrom.apply(this, arguments);\n}\nfunction _connectBlocksFrom() {\n  _connectBlocksFrom = _asyncToGenerator(function* (url, register = false) {\n    return new Promise((resolve, reject) => {\n      if (typeof document !== 'object') {\n        resolve(null);\n        return;\n      }\n      if (typeof window === 'object' && window[LR_WINDOW_KEY]) {\n        resolve(window[LR_WINDOW_KEY]);\n        return;\n      }\n      let script = document.createElement('script');\n      script.type = 'module';\n      script.src = url;\n      script.onerror = () => {\n        reject();\n      };\n      script.onload = () => {\n        /** @type {import('../index.js')} */\n        let blocks = window[LR_WINDOW_KEY];\n        register && registerBlocks(blocks);\n        resolve(blocks);\n      };\n      document.head.appendChild(script);\n    });\n  });\n  return _connectBlocksFrom.apply(this, arguments);\n}","map":{"version":3,"names":["registerBlocks","LR_WINDOW_KEY","connectBlocksFrom","_x","_connectBlocksFrom","apply","arguments","_asyncToGenerator","url","register","Promise","resolve","reject","document","window","script","createElement","type","src","onerror","onload","blocks","head","appendChild"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/abstract/connectBlocksFrom.js"],"sourcesContent":["import { registerBlocks } from './registerBlocks.js';\n\nexport const LR_WINDOW_KEY = '__lr-blocks__';\n\n/**\n * @param {String} url Blocks pack url\n * @param {Boolean} [register] Register connected package, if it not registered yet\n * @returns {Promise<import('../index.js')>}\n */\nexport async function connectBlocksFrom(url, register = false) {\n  return new Promise((resolve, reject) => {\n    if (typeof document !== 'object') {\n      resolve(null);\n      return;\n    }\n    if (typeof window === 'object' && window[LR_WINDOW_KEY]) {\n      resolve(window[LR_WINDOW_KEY]);\n      return;\n    }\n    let script = document.createElement('script');\n    script.type = 'module';\n    script.src = url;\n    script.onerror = () => {\n      reject();\n    };\n    script.onload = () => {\n      /** @type {import('../index.js')} */\n      let blocks = window[LR_WINDOW_KEY];\n      register && registerBlocks(blocks);\n      resolve(blocks);\n    };\n    document.head.appendChild(script);\n  });\n}\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,qBAAqB;AAEpD,OAAO,MAAMC,aAAa,GAAG,eAAe;;AAE5C;AACA;AACA;AACA;AACA;AACA,gBAAsBC,iBAAiBA,CAAAC,EAAA;EAAA,OAAAC,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAwBtC,SAAAF,mBAAA;EAAAA,kBAAA,GAAAG,iBAAA,CAxBM,WAAiCC,GAAG,EAAEC,QAAQ,GAAG,KAAK,EAAE;IAC7D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,IAAI,OAAOC,QAAQ,KAAK,QAAQ,EAAE;QAChCF,OAAO,CAAC,IAAI,CAAC;QACb;MACF;MACA,IAAI,OAAOG,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACb,aAAa,CAAC,EAAE;QACvDU,OAAO,CAACG,MAAM,CAACb,aAAa,CAAC,CAAC;QAC9B;MACF;MACA,IAAIc,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC7CD,MAAM,CAACE,IAAI,GAAG,QAAQ;MACtBF,MAAM,CAACG,GAAG,GAAGV,GAAG;MAChBO,MAAM,CAACI,OAAO,GAAG,MAAM;QACrBP,MAAM,CAAC,CAAC;MACV,CAAC;MACDG,MAAM,CAACK,MAAM,GAAG,MAAM;QACpB;QACA,IAAIC,MAAM,GAAGP,MAAM,CAACb,aAAa,CAAC;QAClCQ,QAAQ,IAAIT,cAAc,CAACqB,MAAM,CAAC;QAClCV,OAAO,CAACU,MAAM,CAAC;MACjB,CAAC;MACDR,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EAAA,OAAAX,kBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}