{"ast":null,"code":"import _asyncToGenerator from \"/Users/David/Documents/own_projects/mp4-to-gif/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { uploadFileGroup } from '@uploadcare/upload-client';\n\n/** @typedef {import('@uploadcare/upload-client').UploadcareFile[]} FileList} */\n\nexport class DataOutput extends UploaderBlock {\n  processInnerHtml = true;\n  init$ = {\n    ...this.init$,\n    output: null,\n    filesData: null\n  };\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-group-output': 0\n  };\n  get dict() {\n    return DataOutput.dict;\n  }\n  get validationInput() {\n    return this._validationInputElement;\n  }\n  initCallback() {\n    var _this = this;\n    super.initCallback();\n    if (this.hasAttribute(this.dict.FORM_INPUT_ATTR)) {\n      this._dynamicInputsContainer = document.createElement('div');\n      this.appendChild(this._dynamicInputsContainer);\n      if (this.hasAttribute(this.dict.INPUT_REQUIRED)) {\n        let input = document.createElement('input');\n        input.type = 'text';\n        input.name = '__UPLOADCARE_VALIDATION_INPUT__';\n        input.required = true;\n        this.appendChild(input);\n        this._validationInputElement = input;\n      }\n    }\n    this.sub('output', data => {\n      if (!data) {\n        return;\n      }\n      if (this.hasAttribute(this.dict.FIRE_EVENT_ATTR)) {\n        this.dispatchEvent(new CustomEvent(this.dict.EVENT_NAME, {\n          bubbles: true,\n          composed: true,\n          detail: {\n            timestamp: Date.now(),\n            ctxName: this.ctxName,\n            data\n          }\n        }));\n      }\n      if (this.hasAttribute(this.dict.FORM_INPUT_ATTR)) {\n        this._dynamicInputsContainer.innerHTML = '';\n        let values = data.groupData ? [data.groupData.cdnUrl] : data.map(file => file.cdnUrl);\n        for (let value of values) {\n          let input = document.createElement('input');\n          input.type = 'hidden';\n          input.name = this.getAttribute(this.dict.INPUT_NAME_ATTR) || this.ctxName;\n          input.value = value;\n          this._dynamicInputsContainer.appendChild(input);\n        }\n        if (this.hasAttribute(this.dict.INPUT_REQUIRED)) {\n          this._validationInputElement.value = values.length ? '__VALUE__' : '';\n        }\n      }\n      if (this.hasAttribute(this.dict.CONSOLE_ATTR)) {\n        console.log(data);\n      }\n    }, false);\n    this.sub(this.dict.SRC_CTX_KEY, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* ( /** @type {FileList} */data) {\n        if (!data) {\n          _this.$.output = null;\n          _this.$.filesData = null;\n          return;\n        }\n        _this.$.filesData = data;\n        if (_this.getCssData('--cfg-group-output') || _this.hasAttribute(_this.dict.GROUP_ATTR)) {\n          let uuidList = data.map(fileDesc => {\n            return fileDesc.uuid;\n          });\n          let resp = yield uploadFileGroup(uuidList, {\n            ..._this.getUploadClientOptions()\n          });\n          _this.$.output = {\n            groupData: resp,\n            files: data\n          };\n        } else {\n          _this.$.output = data;\n        }\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), false);\n  }\n}\n\n/** @enum {Object<[x: string], string>} */\nDataOutput.dict = {\n  SRC_CTX_KEY: '*outputData',\n  EVENT_NAME: 'lr-data-output',\n  FIRE_EVENT_ATTR: 'use-event',\n  CONSOLE_ATTR: 'use-console',\n  GROUP_ATTR: 'use-group',\n  FORM_INPUT_ATTR: 'use-input',\n  INPUT_NAME_ATTR: 'input-name',\n  INPUT_REQUIRED: 'input-required'\n};","map":{"version":3,"names":["UploaderBlock","uploadFileGroup","DataOutput","processInnerHtml","init$","output","filesData","cssInit$","dict","validationInput","_validationInputElement","initCallback","_this","hasAttribute","FORM_INPUT_ATTR","_dynamicInputsContainer","document","createElement","appendChild","INPUT_REQUIRED","input","type","name","required","sub","data","FIRE_EVENT_ATTR","dispatchEvent","CustomEvent","EVENT_NAME","bubbles","composed","detail","timestamp","Date","now","ctxName","innerHTML","values","groupData","cdnUrl","map","file","value","getAttribute","INPUT_NAME_ATTR","length","CONSOLE_ATTR","console","log","SRC_CTX_KEY","_ref","_asyncToGenerator","$","getCssData","GROUP_ATTR","uuidList","fileDesc","uuid","resp","getUploadClientOptions","files","_x","apply","arguments"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/DataOutput/DataOutput.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { uploadFileGroup } from '@uploadcare/upload-client';\n\n/** @typedef {import('@uploadcare/upload-client').UploadcareFile[]} FileList} */\n\nexport class DataOutput extends UploaderBlock {\n  processInnerHtml = true;\n\n  init$ = {\n    ...this.init$,\n    output: null,\n    filesData: null,\n  };\n\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-group-output': 0,\n  };\n\n  get dict() {\n    return DataOutput.dict;\n  }\n\n  get validationInput() {\n    return this._validationInputElement;\n  }\n\n  initCallback() {\n    super.initCallback();\n\n    if (this.hasAttribute(this.dict.FORM_INPUT_ATTR)) {\n      this._dynamicInputsContainer = document.createElement('div');\n      this.appendChild(this._dynamicInputsContainer);\n\n      if (this.hasAttribute(this.dict.INPUT_REQUIRED)) {\n        let input = document.createElement('input');\n        input.type = 'text';\n        input.name = '__UPLOADCARE_VALIDATION_INPUT__';\n        input.required = true;\n        this.appendChild(input);\n        this._validationInputElement = input;\n      }\n    }\n\n    this.sub(\n      'output',\n      (data) => {\n        if (!data) {\n          return;\n        }\n        if (this.hasAttribute(this.dict.FIRE_EVENT_ATTR)) {\n          this.dispatchEvent(\n            new CustomEvent(this.dict.EVENT_NAME, {\n              bubbles: true,\n              composed: true,\n              detail: {\n                timestamp: Date.now(),\n                ctxName: this.ctxName,\n                data,\n              },\n            })\n          );\n        }\n\n        if (this.hasAttribute(this.dict.FORM_INPUT_ATTR)) {\n          this._dynamicInputsContainer.innerHTML = '';\n          let values = data.groupData ? [data.groupData.cdnUrl] : data.map((file) => file.cdnUrl);\n          for (let value of values) {\n            let input = document.createElement('input');\n            input.type = 'hidden';\n            input.name = this.getAttribute(this.dict.INPUT_NAME_ATTR) || this.ctxName;\n            input.value = value;\n            this._dynamicInputsContainer.appendChild(input);\n          }\n          if (this.hasAttribute(this.dict.INPUT_REQUIRED)) {\n            this._validationInputElement.value = values.length ? '__VALUE__' : '';\n          }\n        }\n\n        if (this.hasAttribute(this.dict.CONSOLE_ATTR)) {\n          console.log(data);\n        }\n      },\n      false\n    );\n\n    this.sub(\n      this.dict.SRC_CTX_KEY,\n      async (/** @type {FileList} */ data) => {\n        if (!data) {\n          this.$.output = null;\n          this.$.filesData = null;\n          return;\n        }\n        this.$.filesData = data;\n        if (this.getCssData('--cfg-group-output') || this.hasAttribute(this.dict.GROUP_ATTR)) {\n          let uuidList = data.map((fileDesc) => {\n            return fileDesc.uuid;\n          });\n          let resp = await uploadFileGroup(uuidList, {\n            ...this.getUploadClientOptions(),\n          });\n          this.$.output = {\n            groupData: resp,\n            files: data,\n          };\n        } else {\n          this.$.output = data;\n        }\n      },\n      false\n    );\n  }\n}\n\n/** @enum {Object<[x: string], string>} */\nDataOutput.dict = {\n  SRC_CTX_KEY: '*outputData',\n  EVENT_NAME: 'lr-data-output',\n  FIRE_EVENT_ATTR: 'use-event',\n  CONSOLE_ATTR: 'use-console',\n  GROUP_ATTR: 'use-group',\n  FORM_INPUT_ATTR: 'use-input',\n  INPUT_NAME_ATTR: 'input-name',\n  INPUT_REQUIRED: 'input-required',\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}