{"ast":null,"code":"// @ts-check\nimport { UploadcareFile } from '@uploadcare/upload-client';\n\n/**\n * @typedef {Object} UploadEntry\n * @property {File} file\n * @property {String} externalUrl\n * @property {String} fileName\n * @property {number} fileSize\n * @property {number} lastModified\n * @property {number} uploadProgress\n * @property {String} uuid\n * @property {Boolean} isImage\n * @property {String} mimeType\n * @property {Error} uploadError\n * @property {String} validationErrorMsg\n * @property {String} ctxName\n * @property {String} cdnUrl\n * @property {String} cdnUrlModifiers\n * @property {UploadcareFile} fileInfo\n * @property {Boolean} isUploading\n * @property {String} thumbUrl\n * @property {Boolean} silentUpload\n */\n\n/**\n * @template {keyof UploadEntry} K\n * @type {Record<K, { type: Function; value: any; nullable?: Boolean }>}\n */\nexport const uploadEntrySchema = Object.freeze({\n  file: {\n    type: File,\n    value: null\n  },\n  externalUrl: {\n    type: String,\n    value: null\n  },\n  fileName: {\n    type: String,\n    value: null,\n    nullable: true\n  },\n  fileSize: {\n    type: Number,\n    value: null,\n    nullable: true\n  },\n  lastModified: {\n    type: Number,\n    value: Date.now()\n  },\n  uploadProgress: {\n    type: Number,\n    value: 0\n  },\n  uuid: {\n    type: String,\n    value: null\n  },\n  isImage: {\n    type: Boolean,\n    value: false\n  },\n  mimeType: {\n    type: String,\n    value: null,\n    nullable: true\n  },\n  uploadError: {\n    // TODO: there could be Error or UploadcareClientError\n    type: Error,\n    value: null,\n    nullable: true\n  },\n  validationErrorMsg: {\n    type: String,\n    value: null,\n    nullable: true\n  },\n  ctxName: {\n    type: String,\n    value: null\n  },\n  cdnUrl: {\n    type: String,\n    value: null\n  },\n  cdnUrlModifiers: {\n    type: String,\n    value: null\n  },\n  fileInfo: {\n    type: UploadcareFile,\n    value: null\n  },\n  isUploading: {\n    type: Boolean,\n    value: false\n  },\n  abortController: {\n    type: AbortController,\n    value: null,\n    nullable: true\n  },\n  thumbUrl: {\n    type: String,\n    value: null,\n    nullable: true\n  },\n  silentUpload: {\n    type: Boolean,\n    value: false\n  },\n  source: {\n    type: String,\n    value: false,\n    nullable: true\n  }\n});","map":{"version":3,"names":["UploadcareFile","uploadEntrySchema","Object","freeze","file","type","File","value","externalUrl","String","fileName","nullable","fileSize","Number","lastModified","Date","now","uploadProgress","uuid","isImage","Boolean","mimeType","uploadError","Error","validationErrorMsg","ctxName","cdnUrl","cdnUrlModifiers","fileInfo","isUploading","abortController","AbortController","thumbUrl","silentUpload","source"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/abstract/uploadEntrySchema.js"],"sourcesContent":["// @ts-check\nimport { UploadcareFile } from '@uploadcare/upload-client';\n\n/**\n * @typedef {Object} UploadEntry\n * @property {File} file\n * @property {String} externalUrl\n * @property {String} fileName\n * @property {number} fileSize\n * @property {number} lastModified\n * @property {number} uploadProgress\n * @property {String} uuid\n * @property {Boolean} isImage\n * @property {String} mimeType\n * @property {Error} uploadError\n * @property {String} validationErrorMsg\n * @property {String} ctxName\n * @property {String} cdnUrl\n * @property {String} cdnUrlModifiers\n * @property {UploadcareFile} fileInfo\n * @property {Boolean} isUploading\n * @property {String} thumbUrl\n * @property {Boolean} silentUpload\n */\n\n/**\n * @template {keyof UploadEntry} K\n * @type {Record<K, { type: Function; value: any; nullable?: Boolean }>}\n */\nexport const uploadEntrySchema = Object.freeze({\n  file: {\n    type: File,\n    value: null,\n  },\n  externalUrl: {\n    type: String,\n    value: null,\n  },\n  fileName: {\n    type: String,\n    value: null,\n    nullable: true,\n  },\n  fileSize: {\n    type: Number,\n    value: null,\n    nullable: true,\n  },\n  lastModified: {\n    type: Number,\n    value: Date.now(),\n  },\n  uploadProgress: {\n    type: Number,\n    value: 0,\n  },\n  uuid: {\n    type: String,\n    value: null,\n  },\n  isImage: {\n    type: Boolean,\n    value: false,\n  },\n  mimeType: {\n    type: String,\n    value: null,\n    nullable: true,\n  },\n  uploadError: {\n    // TODO: there could be Error or UploadcareClientError\n    type: Error,\n    value: null,\n    nullable: true,\n  },\n  validationErrorMsg: {\n    type: String,\n    value: null,\n    nullable: true,\n  },\n  ctxName: {\n    type: String,\n    value: null,\n  },\n  cdnUrl: {\n    type: String,\n    value: null,\n  },\n  cdnUrlModifiers: {\n    type: String,\n    value: null,\n  },\n  fileInfo: {\n    type: UploadcareFile,\n    value: null,\n  },\n  isUploading: {\n    type: Boolean,\n    value: false,\n  },\n  abortController: {\n    type: AbortController,\n    value: null,\n    nullable: true,\n  },\n  thumbUrl: {\n    type: String,\n    value: null,\n    nullable: true,\n  },\n  silentUpload: {\n    type: Boolean,\n    value: false,\n  },\n  source: {\n    type: String,\n    value: false,\n    nullable: true,\n  },\n});\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,2BAA2B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC7CC,IAAI,EAAE;IACJC,IAAI,EAAEC,IAAI;IACVC,KAAK,EAAE;EACT,CAAC;EACDC,WAAW,EAAE;IACXH,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE;EACT,CAAC;EACDG,QAAQ,EAAE;IACRL,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRP,IAAI,EAAEQ,MAAM;IACZN,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDG,YAAY,EAAE;IACZT,IAAI,EAAEQ,MAAM;IACZN,KAAK,EAAEQ,IAAI,CAACC,GAAG,CAAC;EAClB,CAAC;EACDC,cAAc,EAAE;IACdZ,IAAI,EAAEQ,MAAM;IACZN,KAAK,EAAE;EACT,CAAC;EACDW,IAAI,EAAE;IACJb,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE;EACT,CAAC;EACDY,OAAO,EAAE;IACPd,IAAI,EAAEe,OAAO;IACbb,KAAK,EAAE;EACT,CAAC;EACDc,QAAQ,EAAE;IACRhB,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDW,WAAW,EAAE;IACX;IACAjB,IAAI,EAAEkB,KAAK;IACXhB,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDa,kBAAkB,EAAE;IAClBnB,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDc,OAAO,EAAE;IACPpB,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE;EACT,CAAC;EACDmB,MAAM,EAAE;IACNrB,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE;EACT,CAAC;EACDoB,eAAe,EAAE;IACftB,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE;EACT,CAAC;EACDqB,QAAQ,EAAE;IACRvB,IAAI,EAAEL,cAAc;IACpBO,KAAK,EAAE;EACT,CAAC;EACDsB,WAAW,EAAE;IACXxB,IAAI,EAAEe,OAAO;IACbb,KAAK,EAAE;EACT,CAAC;EACDuB,eAAe,EAAE;IACfzB,IAAI,EAAE0B,eAAe;IACrBxB,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDqB,QAAQ,EAAE;IACR3B,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE,IAAI;IACXI,QAAQ,EAAE;EACZ,CAAC;EACDsB,YAAY,EAAE;IACZ5B,IAAI,EAAEe,OAAO;IACbb,KAAK,EAAE;EACT,CAAC;EACD2B,MAAM,EAAE;IACN7B,IAAI,EAAEI,MAAM;IACZF,KAAK,EAAE,KAAK;IACZI,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}