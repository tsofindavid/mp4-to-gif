{"ast":null,"code":"import { THUMB_CORNER_SIZE, THUMB_OFFSET, THUMB_SIDE_SIZE } from './cropper-constants.js';\n\n/**\n * @param {SVGElement} node\n * @param {{ [key: String]: String | Number }} attrs\n */\nexport function setSvgNodeAttrs(node, attrs) {\n  for (let p in attrs) node.setAttributeNS(null, p, attrs[p].toString());\n}\n\n/**\n * @param {String} name\n * @param {{ [key: String]: String | Number }} attrs\n * @returns {SVGElement}\n */\nexport function createSvgNode(name, attrs = {}) {\n  let node = document.createElementNS('http://www.w3.org/2000/svg', name);\n  setSvgNodeAttrs(node, attrs);\n  return node;\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {String} direction\n */\nexport function cornerPath(rect, direction) {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  let wMul = direction.includes('w') ? 0 : 1;\n  let hMul = direction.includes('n') ? 0 : 1;\n  let xSide = [-1, 1][wMul];\n  let ySide = [-1, 1][hMul];\n  let p1 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height + THUMB_OFFSET * ySide - THUMB_CORNER_SIZE * ySide];\n  let p2 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height + THUMB_OFFSET * ySide];\n  let p3 = [x + wMul * width - THUMB_CORNER_SIZE * xSide + THUMB_OFFSET * xSide, y + hMul * height + THUMB_OFFSET * ySide];\n  let path = `M ${p1[0]} ${p1[1]} L ${p2[0]} ${p2[1]} L ${p3[0]} ${p3[1]}`;\n  let center = p2;\n  return {\n    d: path,\n    center\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {String} direction\n */\nexport function sidePath(rect, direction) {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  let wMul = ['n', 's'].includes(direction) ? 0.5 : {\n    w: 0,\n    e: 1\n  }[direction];\n  let hMul = ['w', 'e'].includes(direction) ? 0.5 : {\n    n: 0,\n    s: 1\n  }[direction];\n  let xSide = [-1, 1][wMul];\n  let ySide = [-1, 1][hMul];\n  let p1, p2;\n  if (['n', 's'].includes(direction)) {\n    p1 = [x + wMul * width - THUMB_SIDE_SIZE / 2, y + hMul * height + THUMB_OFFSET * ySide];\n    p2 = [x + wMul * width + THUMB_SIDE_SIZE / 2, y + hMul * height + THUMB_OFFSET * ySide];\n  } else {\n    p1 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height - THUMB_SIDE_SIZE / 2];\n    p2 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height + THUMB_SIDE_SIZE / 2];\n  }\n  let path = `M ${p1[0]} ${p1[1]} L ${p2[0]} ${p2[1]}`;\n  let center = [p2[0] - (p2[0] - p1[0]) / 2, p2[1] - (p2[1] - p1[1]) / 2];\n  return {\n    d: path,\n    center\n  };\n}\n\n/** @param {String} direction */\nexport function thumbCursor(direction) {\n  if (direction === '') {\n    return 'move';\n  }\n  if (['e', 'w'].includes(direction)) {\n    return 'ew-resize';\n  }\n  if (['n', 's'].includes(direction)) {\n    return 'ns-resize';\n  }\n  if (['nw', 'se'].includes(direction)) {\n    return 'nwse-resize';\n  }\n  return 'nesw-resize';\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} delta\n */\nexport function moveRect(rect, [dx, dy]) {\n  return {\n    ...rect,\n    x: rect.x + dx,\n    y: rect.y + dy\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect1\n * @param {import('./types.js').Rectangle} rect2\n */\nexport function constraintRect(rect1, rect2) {\n  let {\n    x\n  } = rect1;\n  let {\n    y\n  } = rect1;\n  if (rect1.x < rect2.x) {\n    x = rect2.x;\n  } else if (rect1.x + rect1.width > rect2.x + rect2.width) {\n    x = rect2.x + rect2.width - rect1.width;\n  }\n  if (rect1.y < rect2.y) {\n    y = rect2.y;\n  } else if (rect1.y + rect1.height > rect2.y + rect2.height) {\n    y = rect2.y + rect2.height - rect1.height;\n  }\n  return {\n    ...rect1,\n    x,\n    y\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} delta\n * @param {String} direction\n */\nexport function expandRect(rect, [dx, dy], direction) {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  if (direction.includes('n')) {\n    y += dy;\n    height -= dy;\n  }\n  if (direction.includes('s')) {\n    height += dy;\n  }\n  if (direction.includes('w')) {\n    x += dx;\n    width -= dx;\n  }\n  if (direction.includes('e')) {\n    width += dx;\n  }\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect1\n * @param {import('./types.js').Rectangle} rect2\n */\nexport function intersectionRect(rect1, rect2) {\n  let leftX = Math.max(rect1.x, rect2.x);\n  let rightX = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n  let topY = Math.max(rect1.y, rect2.y);\n  let bottomY = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n  return {\n    x: leftX,\n    y: topY,\n    width: rightX - leftX,\n    height: bottomY - topY\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} minSize\n * @param {String} direction\n */\nexport function minRectSize(rect, [minWidth, minHeight], direction) {\n  let {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  if (direction.includes('n')) {\n    let prevHeight = height;\n    height = Math.max(minHeight, height);\n    y = y + prevHeight - height;\n  }\n  if (direction.includes('s')) {\n    height = Math.max(minHeight, height);\n  }\n  if (direction.includes('w')) {\n    let prevWidth = width;\n    width = Math.max(minWidth, width);\n    x = x + prevWidth - width;\n  }\n  if (direction.includes('e')) {\n    width = Math.max(minWidth, width);\n  }\n  return {\n    x,\n    y,\n    width,\n    height\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} point\n */\nexport function rectContainsPoint(rect, [x, y]) {\n  return rect.x <= x && x <= rect.x + rect.width && rect.y <= y && y <= rect.y + rect.height;\n}","map":{"version":3,"names":["THUMB_CORNER_SIZE","THUMB_OFFSET","THUMB_SIDE_SIZE","setSvgNodeAttrs","node","attrs","p","setAttributeNS","toString","createSvgNode","name","document","createElementNS","cornerPath","rect","direction","x","y","width","height","wMul","includes","hMul","xSide","ySide","p1","p2","p3","path","center","d","sidePath","w","e","n","s","thumbCursor","moveRect","dx","dy","constraintRect","rect1","rect2","expandRect","intersectionRect","leftX","Math","max","rightX","min","topY","bottomY","minRectSize","minWidth","minHeight","prevHeight","prevWidth","rectContainsPoint"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/CloudImageEditor/src/crop-utils.js"],"sourcesContent":["import { THUMB_CORNER_SIZE, THUMB_OFFSET, THUMB_SIDE_SIZE } from './cropper-constants.js';\n\n/**\n * @param {SVGElement} node\n * @param {{ [key: String]: String | Number }} attrs\n */\nexport function setSvgNodeAttrs(node, attrs) {\n  for (let p in attrs) node.setAttributeNS(null, p, attrs[p].toString());\n}\n\n/**\n * @param {String} name\n * @param {{ [key: String]: String | Number }} attrs\n * @returns {SVGElement}\n */\nexport function createSvgNode(name, attrs = {}) {\n  let node = document.createElementNS('http://www.w3.org/2000/svg', name);\n  setSvgNodeAttrs(node, attrs);\n  return node;\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {String} direction\n */\nexport function cornerPath(rect, direction) {\n  let { x, y, width, height } = rect;\n\n  let wMul = direction.includes('w') ? 0 : 1;\n  let hMul = direction.includes('n') ? 0 : 1;\n  let xSide = [-1, 1][wMul];\n  let ySide = [-1, 1][hMul];\n\n  let p1 = [\n    x + wMul * width + THUMB_OFFSET * xSide,\n    y + hMul * height + THUMB_OFFSET * ySide - THUMB_CORNER_SIZE * ySide,\n  ];\n  let p2 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height + THUMB_OFFSET * ySide];\n  let p3 = [\n    x + wMul * width - THUMB_CORNER_SIZE * xSide + THUMB_OFFSET * xSide,\n    y + hMul * height + THUMB_OFFSET * ySide,\n  ];\n\n  let path = `M ${p1[0]} ${p1[1]} L ${p2[0]} ${p2[1]} L ${p3[0]} ${p3[1]}`;\n  let center = p2;\n\n  return {\n    d: path,\n    center,\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {String} direction\n */\nexport function sidePath(rect, direction) {\n  let { x, y, width, height } = rect;\n\n  let wMul = ['n', 's'].includes(direction) ? 0.5 : { w: 0, e: 1 }[direction];\n  let hMul = ['w', 'e'].includes(direction) ? 0.5 : { n: 0, s: 1 }[direction];\n  let xSide = [-1, 1][wMul];\n  let ySide = [-1, 1][hMul];\n\n  let p1, p2;\n  if (['n', 's'].includes(direction)) {\n    p1 = [x + wMul * width - THUMB_SIDE_SIZE / 2, y + hMul * height + THUMB_OFFSET * ySide];\n    p2 = [x + wMul * width + THUMB_SIDE_SIZE / 2, y + hMul * height + THUMB_OFFSET * ySide];\n  } else {\n    p1 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height - THUMB_SIDE_SIZE / 2];\n    p2 = [x + wMul * width + THUMB_OFFSET * xSide, y + hMul * height + THUMB_SIDE_SIZE / 2];\n  }\n  let path = `M ${p1[0]} ${p1[1]} L ${p2[0]} ${p2[1]}`;\n  let center = [p2[0] - (p2[0] - p1[0]) / 2, p2[1] - (p2[1] - p1[1]) / 2];\n\n  return { d: path, center };\n}\n\n/** @param {String} direction */\nexport function thumbCursor(direction) {\n  if (direction === '') {\n    return 'move';\n  }\n  if (['e', 'w'].includes(direction)) {\n    return 'ew-resize';\n  }\n  if (['n', 's'].includes(direction)) {\n    return 'ns-resize';\n  }\n  if (['nw', 'se'].includes(direction)) {\n    return 'nwse-resize';\n  }\n  return 'nesw-resize';\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} delta\n */\nexport function moveRect(rect, [dx, dy]) {\n  return {\n    ...rect,\n    x: rect.x + dx,\n    y: rect.y + dy,\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect1\n * @param {import('./types.js').Rectangle} rect2\n */\nexport function constraintRect(rect1, rect2) {\n  let { x } = rect1;\n  let { y } = rect1;\n  if (rect1.x < rect2.x) {\n    x = rect2.x;\n  } else if (rect1.x + rect1.width > rect2.x + rect2.width) {\n    x = rect2.x + rect2.width - rect1.width;\n  }\n  if (rect1.y < rect2.y) {\n    y = rect2.y;\n  } else if (rect1.y + rect1.height > rect2.y + rect2.height) {\n    y = rect2.y + rect2.height - rect1.height;\n  }\n\n  return {\n    ...rect1,\n    x,\n    y,\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} delta\n * @param {String} direction\n */\nexport function expandRect(rect, [dx, dy], direction) {\n  let { x, y, width, height } = rect;\n\n  if (direction.includes('n')) {\n    y += dy;\n    height -= dy;\n  }\n  if (direction.includes('s')) {\n    height += dy;\n  }\n  if (direction.includes('w')) {\n    x += dx;\n    width -= dx;\n  }\n  if (direction.includes('e')) {\n    width += dx;\n  }\n  return {\n    x,\n    y,\n    width,\n    height,\n  };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect1\n * @param {import('./types.js').Rectangle} rect2\n */\nexport function intersectionRect(rect1, rect2) {\n  let leftX = Math.max(rect1.x, rect2.x);\n  let rightX = Math.min(rect1.x + rect1.width, rect2.x + rect2.width);\n  let topY = Math.max(rect1.y, rect2.y);\n  let bottomY = Math.min(rect1.y + rect1.height, rect2.y + rect2.height);\n\n  return { x: leftX, y: topY, width: rightX - leftX, height: bottomY - topY };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} minSize\n * @param {String} direction\n */\nexport function minRectSize(rect, [minWidth, minHeight], direction) {\n  let { x, y, width, height } = rect;\n\n  if (direction.includes('n')) {\n    let prevHeight = height;\n    height = Math.max(minHeight, height);\n    y = y + prevHeight - height;\n  }\n  if (direction.includes('s')) {\n    height = Math.max(minHeight, height);\n  }\n  if (direction.includes('w')) {\n    let prevWidth = width;\n    width = Math.max(minWidth, width);\n    x = x + prevWidth - width;\n  }\n  if (direction.includes('e')) {\n    width = Math.max(minWidth, width);\n  }\n\n  return { x, y, width, height };\n}\n\n/**\n * @param {import('./types.js').Rectangle} rect\n * @param {[Number, Number]} point\n */\nexport function rectContainsPoint(rect, [x, y]) {\n  return rect.x <= x && x <= rect.x + rect.width && rect.y <= y && y <= rect.y + rect.height;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}