{"ast":null,"code":"import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { createCdnUrl, createCdnUrlModifiers } from '../../utils/cdn-utils.js';\nimport { fileCssBg } from '../svg-backgrounds/svg-backgrounds.js';\nimport { fileIsImage } from '../../utils/fileTypes.js';\nexport class UploadDetails extends UploaderBlock {\n  activityType = ActivityBlock.activities.DETAILS;\n  pauseRender = true;\n  init$ = {\n    ...this.init$,\n    checkerboard: false,\n    fileSize: null,\n    fileName: '',\n    cdnUrl: '',\n    errorTxt: '',\n    cloudEditBtnHidden: true,\n    onNameInput: null,\n    onBack: () => {\n      this.historyBack();\n    },\n    onRemove: () => {\n      /** @type {File[]} */\n      this.uploadCollection.remove(this.entry.uid);\n      this.historyBack();\n    },\n    onCloudEdit: () => {\n      if (this.entry.getValue('uuid')) {\n        this.$['*currentActivity'] = ActivityBlock.activities.CLOUD_IMG_EDIT;\n      }\n    }\n  };\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-use-cloud-image-editor': 0,\n    '--cfg-use-local-image-editor': 0\n  };\n  showNonImageThumb() {\n    let color = window.getComputedStyle(this).getPropertyValue('--clr-generic-file-icon');\n    let url = fileCssBg(color, 108, 108);\n    this.ref.filePreview.setImageUrl(url);\n    this.set$({\n      checkerboard: false\n    });\n  }\n  initCallback() {\n    super.initCallback();\n    // Rendering is postponed for the CSS-context-properties usage in template:\n    this.render();\n    this.$.fileSize = this.l10n('file-size-unknown');\n    this.registerActivity(this.activityType, {\n      onDeactivate: () => {\n        this.ref.filePreview.clear();\n      }\n    });\n    /** @type {import('../FilePreview/FilePreview.js').FilePreview} */\n    this.sub('*focusedEntry', ( /** @type {import('../../abstract/TypedData.js').TypedData} */entry) => {\n      if (!entry) {\n        return;\n      }\n      if (this._entrySubs) {\n        this._entrySubs.forEach(sub => {\n          this._entrySubs.delete(sub);\n          sub.remove();\n        });\n      } else {\n        /** @private */\n        this._entrySubs = new Set();\n      }\n      this.entry = entry;\n      /** @type {File} */\n      let file = entry.getValue('file');\n      if (file) {\n        /**\n         * @private\n         * @type {File}\n         */\n        this._file = file;\n        let isImage = fileIsImage(this._file);\n        if (isImage && !entry.getValue('cdnUrl')) {\n          this.ref.filePreview.setImageFile(this._file);\n          this.set$({\n            checkerboard: true\n          });\n        }\n        if (!isImage) {\n          this.showNonImageThumb();\n        }\n      }\n      let tmpSub = (prop, callback) => {\n        this._entrySubs.add(this.entry.subscribe(prop, callback));\n      };\n      tmpSub('fileName', name => {\n        this.$.fileName = name;\n        this.$.onNameInput = () => {\n          let value = this.ref.file_name_input['value'];\n          Object.defineProperty(this._file, 'name', {\n            writable: true,\n            value: value\n          });\n          this.entry.setValue('fileName', value);\n        };\n      });\n      tmpSub('fileSize', size => {\n        this.$.fileSize = Number.isFinite(size) ? this.fileSizeFmt(size) : this.l10n('file-size-unknown');\n      });\n      tmpSub('uploadError', error => {\n        this.$.errorTxt = error?.message;\n      });\n      tmpSub('externalUrl', url => {\n        if (!url) {\n          return;\n        }\n        if (!this.entry.getValue('uuid')) {\n          this.showNonImageThumb();\n        }\n      });\n      tmpSub('cdnUrl', cdnUrl => {\n        const canUseCloudEditor = this.$['--cfg-use-cloud-image-editor'] && cdnUrl && this.entry.getValue('isImage');\n        cdnUrl && this.ref.filePreview.clear();\n        this.set$({\n          cdnUrl,\n          cloudEditBtnHidden: !canUseCloudEditor\n        });\n        if (cdnUrl && this.entry.getValue('isImage')) {\n          // TODO: need to resize image to fit the canvas size\n          let imageUrl = createCdnUrl(cdnUrl, createCdnUrlModifiers('format/auto', 'preview'));\n          this.ref.filePreview.setImageUrl(this.proxyUrl(imageUrl));\n        }\n      });\n    });\n  }\n}\nUploadDetails.template = /* HTML */`\n  <lr-activity-header>\n    <button type=\"button\" class=\"mini-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"back\"></lr-icon>\n    </button>\n    <span l10n=\"caption-edit-file\"></span>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *closeModal\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n  <div class=\"content\">\n    <lr-tabs tab-list=\"tab-view, tab-details\">\n      <div tab-ctx=\"tab-details\" class=\"details\">\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"file-name\"></div>\n          <input\n            name=\"name-input\"\n            ref=\"file_name_input\"\n            set=\"value: fileName; oninput: onNameInput; @disabled: !!cdnUrl\"\n            type=\"text\"\n          />\n        </div>\n\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"file-size\"></div>\n          <div>{{fileSize}}</div>\n        </div>\n\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"cdn-url\"></div>\n          <a class=\"cdn-link\" target=\"_blank\" set=\"@href: cdnUrl; @disabled: !cdnUrl\">{{cdnUrl}}</a>\n        </div>\n\n        <div>{{errorTxt}}</div>\n      </div>\n\n      <lr-file-preview tab-ctx=\"tab-view\" set=\"@checkerboard: checkerboard;\" ref=\"filePreview\"> </lr-file-preview>\n    </lr-tabs>\n\n    <div class=\"toolbar\" set=\"@edit-disabled: cloudEditBtnHidden\">\n      <button type=\"button\" class=\"edit-btn secondary-btn\" set=\"onclick: onCloudEdit; @hidden: cloudEditBtnHidden;\">\n        <lr-icon name=\"edit\"></lr-icon>\n        <span l10n=\"edit-image\"></span>\n      </button>\n      <button type=\"button\" class=\"remove-btn secondary-btn\" set=\"onclick: onRemove\">\n        <lr-icon name=\"remove\"></lr-icon>\n        <span l10n=\"remove-from-list\"></span>\n      </button>\n      <div></div>\n      <button type=\"button\" class=\"back-btn primary-btn\" set=\"onclick: onBack\">\n        <span l10n=\"ok\"></span>\n      </button>\n    </div>\n  </div>\n`;","map":{"version":3,"names":["UploaderBlock","ActivityBlock","createCdnUrl","createCdnUrlModifiers","fileCssBg","fileIsImage","UploadDetails","activityType","activities","DETAILS","pauseRender","init$","checkerboard","fileSize","fileName","cdnUrl","errorTxt","cloudEditBtnHidden","onNameInput","onBack","historyBack","onRemove","uploadCollection","remove","entry","uid","onCloudEdit","getValue","$","CLOUD_IMG_EDIT","cssInit$","showNonImageThumb","color","window","getComputedStyle","getPropertyValue","url","ref","filePreview","setImageUrl","set$","initCallback","render","l10n","registerActivity","onDeactivate","clear","sub","_entrySubs","forEach","delete","Set","file","_file","isImage","setImageFile","tmpSub","prop","callback","add","subscribe","name","value","file_name_input","Object","defineProperty","writable","setValue","size","Number","isFinite","fileSizeFmt","error","message","canUseCloudEditor","imageUrl","proxyUrl","template"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/UploadDetails/UploadDetails.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { createCdnUrl, createCdnUrlModifiers } from '../../utils/cdn-utils.js';\nimport { fileCssBg } from '../svg-backgrounds/svg-backgrounds.js';\nimport { fileIsImage } from '../../utils/fileTypes.js';\n\nexport class UploadDetails extends UploaderBlock {\n  activityType = ActivityBlock.activities.DETAILS;\n\n  pauseRender = true;\n\n  init$ = {\n    ...this.init$,\n    checkerboard: false,\n    fileSize: null,\n    fileName: '',\n    cdnUrl: '',\n    errorTxt: '',\n    cloudEditBtnHidden: true,\n    onNameInput: null,\n    onBack: () => {\n      this.historyBack();\n    },\n    onRemove: () => {\n      /** @type {File[]} */\n      this.uploadCollection.remove(this.entry.uid);\n      this.historyBack();\n    },\n    onCloudEdit: () => {\n      if (this.entry.getValue('uuid')) {\n        this.$['*currentActivity'] = ActivityBlock.activities.CLOUD_IMG_EDIT;\n      }\n    },\n  };\n\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-use-cloud-image-editor': 0,\n    '--cfg-use-local-image-editor': 0,\n  };\n\n  showNonImageThumb() {\n    let color = window.getComputedStyle(this).getPropertyValue('--clr-generic-file-icon');\n    let url = fileCssBg(color, 108, 108);\n    this.ref.filePreview.setImageUrl(url);\n    this.set$({\n      checkerboard: false,\n    });\n  }\n\n  initCallback() {\n    super.initCallback();\n    // Rendering is postponed for the CSS-context-properties usage in template:\n    this.render();\n    this.$.fileSize = this.l10n('file-size-unknown');\n    this.registerActivity(this.activityType, {\n      onDeactivate: () => {\n        this.ref.filePreview.clear();\n      },\n    });\n    /** @type {import('../FilePreview/FilePreview.js').FilePreview} */\n    this.sub('*focusedEntry', (/** @type {import('../../abstract/TypedData.js').TypedData} */ entry) => {\n      if (!entry) {\n        return;\n      }\n      if (this._entrySubs) {\n        this._entrySubs.forEach((sub) => {\n          this._entrySubs.delete(sub);\n          sub.remove();\n        });\n      } else {\n        /** @private */\n        this._entrySubs = new Set();\n      }\n      this.entry = entry;\n      /** @type {File} */\n      let file = entry.getValue('file');\n      if (file) {\n        /**\n         * @private\n         * @type {File}\n         */\n        this._file = file;\n        let isImage = fileIsImage(this._file);\n        if (isImage && !entry.getValue('cdnUrl')) {\n          this.ref.filePreview.setImageFile(this._file);\n          this.set$({\n            checkerboard: true,\n          });\n        }\n        if (!isImage) {\n          this.showNonImageThumb();\n        }\n      }\n      let tmpSub = (prop, callback) => {\n        this._entrySubs.add(this.entry.subscribe(prop, callback));\n      };\n      tmpSub('fileName', (name) => {\n        this.$.fileName = name;\n        this.$.onNameInput = () => {\n          let value = this.ref.file_name_input['value'];\n          Object.defineProperty(this._file, 'name', {\n            writable: true,\n            value: value,\n          });\n          this.entry.setValue('fileName', value);\n        };\n      });\n      tmpSub('fileSize', (size) => {\n        this.$.fileSize = Number.isFinite(size) ? this.fileSizeFmt(size) : this.l10n('file-size-unknown');\n      });\n      tmpSub('uploadError', (error) => {\n        this.$.errorTxt = error?.message;\n      });\n\n      tmpSub('externalUrl', (url) => {\n        if (!url) {\n          return;\n        }\n        if (!this.entry.getValue('uuid')) {\n          this.showNonImageThumb();\n        }\n      });\n      tmpSub('cdnUrl', (cdnUrl) => {\n        const canUseCloudEditor = this.$['--cfg-use-cloud-image-editor'] && cdnUrl && this.entry.getValue('isImage');\n        cdnUrl && this.ref.filePreview.clear();\n        this.set$({\n          cdnUrl,\n          cloudEditBtnHidden: !canUseCloudEditor,\n        });\n        if (cdnUrl && this.entry.getValue('isImage')) {\n          // TODO: need to resize image to fit the canvas size\n          let imageUrl = createCdnUrl(cdnUrl, createCdnUrlModifiers('format/auto', 'preview'));\n          this.ref.filePreview.setImageUrl(this.proxyUrl(imageUrl));\n        }\n      });\n    });\n  }\n}\n\nUploadDetails.template = /* HTML */ `\n  <lr-activity-header>\n    <button type=\"button\" class=\"mini-btn\" set=\"onclick: *historyBack\">\n      <lr-icon name=\"back\"></lr-icon>\n    </button>\n    <span l10n=\"caption-edit-file\"></span>\n    <button type=\"button\" class=\"mini-btn close-btn\" set=\"onclick: *closeModal\">\n      <lr-icon name=\"close\"></lr-icon>\n    </button>\n  </lr-activity-header>\n  <div class=\"content\">\n    <lr-tabs tab-list=\"tab-view, tab-details\">\n      <div tab-ctx=\"tab-details\" class=\"details\">\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"file-name\"></div>\n          <input\n            name=\"name-input\"\n            ref=\"file_name_input\"\n            set=\"value: fileName; oninput: onNameInput; @disabled: !!cdnUrl\"\n            type=\"text\"\n          />\n        </div>\n\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"file-size\"></div>\n          <div>{{fileSize}}</div>\n        </div>\n\n        <div class=\"info-block\">\n          <div class=\"info-block_name\" l10n=\"cdn-url\"></div>\n          <a class=\"cdn-link\" target=\"_blank\" set=\"@href: cdnUrl; @disabled: !cdnUrl\">{{cdnUrl}}</a>\n        </div>\n\n        <div>{{errorTxt}}</div>\n      </div>\n\n      <lr-file-preview tab-ctx=\"tab-view\" set=\"@checkerboard: checkerboard;\" ref=\"filePreview\"> </lr-file-preview>\n    </lr-tabs>\n\n    <div class=\"toolbar\" set=\"@edit-disabled: cloudEditBtnHidden\">\n      <button type=\"button\" class=\"edit-btn secondary-btn\" set=\"onclick: onCloudEdit; @hidden: cloudEditBtnHidden;\">\n        <lr-icon name=\"edit\"></lr-icon>\n        <span l10n=\"edit-image\"></span>\n      </button>\n      <button type=\"button\" class=\"remove-btn secondary-btn\" set=\"onclick: onRemove\">\n        <lr-icon name=\"remove\"></lr-icon>\n        <span l10n=\"remove-from-list\"></span>\n      </button>\n      <div></div>\n      <button type=\"button\" class=\"back-btn primary-btn\" set=\"onclick: onBack\">\n        <span l10n=\"ok\"></span>\n      </button>\n    </div>\n  </div>\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}