{"ast":null,"code":"import { EditorButtonControl } from './EditorButtonControl.js';\nfunction nextAngle(prev) {\n  let angle = prev + 90;\n  angle = angle >= 360 ? 0 : angle;\n  return angle;\n}\nfunction nextValue(operation, prev) {\n  if (operation === 'rotate') {\n    return nextAngle(prev);\n  }\n  if (['mirror', 'flip'].includes(operation)) {\n    return !prev;\n  }\n  return null;\n}\nexport class EditorCropButtonControl extends EditorButtonControl {\n  initCallback() {\n    super.initCallback();\n    this.defineAccessor('operation', operation => {\n      if (!operation) {\n        return;\n      }\n\n      /** @private */\n      this._operation = operation;\n      this.$['icon'] = operation;\n    });\n    this.$['on.click'] = e => {\n      let prev = this.$['*cropperEl'].getValue(this._operation);\n      let next = nextValue(this._operation, prev);\n      this.$['*cropperEl'].setValue(this._operation, next);\n    };\n  }\n}","map":{"version":3,"names":["EditorButtonControl","nextAngle","prev","angle","nextValue","operation","includes","EditorCropButtonControl","initCallback","defineAccessor","_operation","$","e","getValue","next","setValue"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/CloudImageEditor/src/EditorCropButtonControl.js"],"sourcesContent":["import { EditorButtonControl } from './EditorButtonControl.js';\n\nfunction nextAngle(prev) {\n  let angle = prev + 90;\n  angle = angle >= 360 ? 0 : angle;\n  return angle;\n}\n\nfunction nextValue(operation, prev) {\n  if (operation === 'rotate') {\n    return nextAngle(prev);\n  }\n  if (['mirror', 'flip'].includes(operation)) {\n    return !prev;\n  }\n  return null;\n}\n\nexport class EditorCropButtonControl extends EditorButtonControl {\n  initCallback() {\n    super.initCallback();\n\n    this.defineAccessor('operation', (operation) => {\n      if (!operation) {\n        return;\n      }\n\n      /** @private */\n      this._operation = operation;\n      this.$['icon'] = operation;\n    });\n\n    this.$['on.click'] = (e) => {\n      let prev = this.$['*cropperEl'].getValue(this._operation);\n      let next = nextValue(this._operation, prev);\n      this.$['*cropperEl'].setValue(this._operation, next);\n    };\n  }\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,SAASA,CAACC,IAAI,EAAE;EACvB,IAAIC,KAAK,GAAGD,IAAI,GAAG,EAAE;EACrBC,KAAK,GAAGA,KAAK,IAAI,GAAG,GAAG,CAAC,GAAGA,KAAK;EAChC,OAAOA,KAAK;AACd;AAEA,SAASC,SAASA,CAACC,SAAS,EAAEH,IAAI,EAAE;EAClC,IAAIG,SAAS,KAAK,QAAQ,EAAE;IAC1B,OAAOJ,SAAS,CAACC,IAAI,CAAC;EACxB;EACA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAACI,QAAQ,CAACD,SAAS,CAAC,EAAE;IAC1C,OAAO,CAACH,IAAI;EACd;EACA,OAAO,IAAI;AACb;AAEA,OAAO,MAAMK,uBAAuB,SAASP,mBAAmB,CAAC;EAC/DQ,YAAYA,CAAA,EAAG;IACb,KAAK,CAACA,YAAY,CAAC,CAAC;IAEpB,IAAI,CAACC,cAAc,CAAC,WAAW,EAAGJ,SAAS,IAAK;MAC9C,IAAI,CAACA,SAAS,EAAE;QACd;MACF;;MAEA;MACA,IAAI,CAACK,UAAU,GAAGL,SAAS;MAC3B,IAAI,CAACM,CAAC,CAAC,MAAM,CAAC,GAAGN,SAAS;IAC5B,CAAC,CAAC;IAEF,IAAI,CAACM,CAAC,CAAC,UAAU,CAAC,GAAIC,CAAC,IAAK;MAC1B,IAAIV,IAAI,GAAG,IAAI,CAACS,CAAC,CAAC,YAAY,CAAC,CAACE,QAAQ,CAAC,IAAI,CAACH,UAAU,CAAC;MACzD,IAAII,IAAI,GAAGV,SAAS,CAAC,IAAI,CAACM,UAAU,EAAER,IAAI,CAAC;MAC3C,IAAI,CAACS,CAAC,CAAC,YAAY,CAAC,CAACI,QAAQ,CAAC,IAAI,CAACL,UAAU,EAAEI,IAAI,CAAC;IACtD,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}