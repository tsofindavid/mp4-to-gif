{"ast":null,"code":"import { Block } from '../../../abstract/Block.js';\nimport { EditorCropButtonControl } from './EditorCropButtonControl.js';\nimport { EditorFilterControl } from './EditorFilterControl.js';\nimport { EditorOperationControl } from './EditorOperationControl.js';\nimport { FAKE_ORIGINAL_FILTER } from './EditorSlider.js';\nimport { classNames } from './lib/classNames.js';\nimport { debounce } from './lib/debounce.js';\nimport { batchPreloadImages } from './lib/preloadImage.js';\nimport { ALL_COLOR_OPERATIONS, ALL_CROP_OPERATIONS, ALL_FILTERS, COLOR_OPERATIONS_CONFIG, TabId, TABS } from './toolbar-constants.js';\nimport { viewerImageSrc } from './util.js';\n\n/** @param {String} id */\nfunction renderTabToggle(id) {\n  return /* HTML */`\n    <lr-btn-ui\n      theme=\"boring\"\n      ref=\"tab-toggle-${id}\"\n      data-id=\"${id}\"\n      icon=\"${id}\"\n      tabindex=\"0\"\n      set=\"onclick: on.clickTab;\"\n    >\n    </lr-btn-ui>\n  `;\n}\n\n/** @param {String} id */\nfunction renderTabContent(id) {\n  return /* HTML */`\n    <lr-presence-toggle class=\"tab-content\" set=\"visible: presence.tabContent.${id}; styles: presence.tabContentStyles\">\n      <lr-editor-scroller hidden-scrollbar>\n        <div class=\"controls-list_align\">\n          <div class=\"controls-list_inner\" ref=\"controls-list-${id}\"></div>\n        </div>\n      </lr-editor-scroller>\n    </lr-presence-toggle>\n  `;\n}\nexport class EditorToolbar extends Block {\n  constructor() {\n    super();\n    this.init$ = {\n      ...this.init$,\n      '*sliderEl': null,\n      /** @type {import('./types.js').LoadingOperations} */\n      '*loadingOperations': new Map(),\n      '*showSlider': false,\n      '*currentFilter': FAKE_ORIGINAL_FILTER,\n      '*currentOperation': null,\n      '*tabId': TabId.CROP,\n      showLoader: false,\n      filters: ALL_FILTERS,\n      colorOperations: ALL_COLOR_OPERATIONS,\n      cropOperations: ALL_CROP_OPERATIONS,\n      '*operationTooltip': null,\n      'l10n.cancel': this.l10n('cancel'),\n      'l10n.apply': this.l10n('apply'),\n      'presence.mainToolbar': true,\n      'presence.subToolbar': false,\n      'presence.tabContent.crop': false,\n      'presence.tabContent.sliders': false,\n      'presence.tabContent.filters': false,\n      'presence.subTopToolbarStyles': {\n        hidden: 'sub-toolbar--top-hidden',\n        visible: 'sub-toolbar--visible'\n      },\n      'presence.subBottomToolbarStyles': {\n        hidden: 'sub-toolbar--bottom-hidden',\n        visible: 'sub-toolbar--visible'\n      },\n      'presence.tabContentStyles': {\n        hidden: 'tab-content--hidden',\n        visible: 'tab-content--visible'\n      },\n      'on.cancel': e => {\n        this._cancelPreload && this._cancelPreload();\n        this.$['*on.cancel']();\n      },\n      'on.apply': e => {\n        this.$['*on.apply'](this.$['*editorTransformations']);\n      },\n      'on.applySlider': e => {\n        this.ref['slider-el'].apply();\n        this._onSliderClose();\n      },\n      'on.cancelSlider': e => {\n        this.ref['slider-el'].cancel();\n        this._onSliderClose();\n      },\n      'on.clickTab': e => {\n        let id = e.currentTarget.getAttribute('data-id');\n        this._activateTab(id, {\n          fromViewer: false\n        });\n      }\n    };\n\n    /** @private */\n\n    this._debouncedShowLoader = debounce(this._showLoader.bind(this), 500);\n  }\n\n  /** @private */\n  _onSliderClose() {\n    this.$['*showSlider'] = false;\n    if (this.$['*tabId'] === TabId.SLIDERS) {\n      this.ref['tooltip-el'].classList.toggle('info-tooltip_visible', false);\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} operation\n   */\n  _createOperationControl(operation) {\n    let el = EditorOperationControl.is && new EditorOperationControl();\n    el['operation'] = operation;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} filter\n   */\n  _createFilterControl(filter) {\n    let el = EditorFilterControl.is && new EditorFilterControl();\n    el['filter'] = filter;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} operation\n   */\n  _createToggleControl(operation) {\n    let el = EditorCropButtonControl.is && new EditorCropButtonControl();\n    el['operation'] = operation;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} tabId\n   */\n  _renderControlsList(tabId) {\n    let listEl = this.ref[`controls-list-${tabId}`];\n    let fr = document.createDocumentFragment();\n    if (tabId === TabId.CROP) {\n      this.$.cropOperations.forEach(operation => {\n        let el = this._createToggleControl(operation);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    } else if (tabId === TabId.FILTERS) {\n      [FAKE_ORIGINAL_FILTER, ...this.$.filters].forEach(filterId => {\n        let el = this._createFilterControl(filterId);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    } else if (tabId === TabId.SLIDERS) {\n      this.$.colorOperations.forEach(operation => {\n        let el = this._createOperationControl(operation);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    }\n    fr.childNodes.forEach(( /** @type {HTMLElement} */el, idx) => {\n      if (idx === fr.childNodes.length - 1) {\n        el.classList.add('controls-list_last-item');\n      }\n    });\n    listEl.innerHTML = '';\n    listEl.appendChild(fr);\n  }\n\n  /**\n   * @private\n   * @param {String} id\n   * @param {{ fromViewer?: Boolean }} options\n   */\n  _activateTab(id, {\n    fromViewer\n  }) {\n    this.$['*tabId'] = id;\n    if (id === TabId.CROP) {\n      this.$['*faderEl'].deactivate();\n      this.$['*cropperEl'].activate(this.$['*imageSize'], {\n        fromViewer\n      });\n    } else {\n      this.$['*faderEl'].activate({\n        url: this.$['*originalUrl'],\n        fromViewer\n      });\n      this.$['*cropperEl'].deactivate();\n    }\n    for (let tabId of TABS) {\n      let isCurrentTab = tabId === id;\n      let tabToggleEl = this.ref[`tab-toggle-${tabId}`];\n      tabToggleEl.active = isCurrentTab;\n      if (isCurrentTab) {\n        this._renderControlsList(id);\n        this._syncTabIndicator();\n      } else {\n        this._unmountTabControls(tabId);\n      }\n      this.$[`presence.tabContent.${tabId}`] = isCurrentTab;\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} tabId\n   */\n  _unmountTabControls(tabId) {\n    let listEl = this.ref[`controls-list-${tabId}`];\n    if (listEl) {\n      listEl.innerHTML = '';\n    }\n  }\n\n  /** @private */\n  _syncTabIndicator() {\n    let tabToggleEl = this.ref[`tab-toggle-${this.$['*tabId']}`];\n    let indicatorEl = this.ref['tabs-indicator'];\n    indicatorEl.style.transform = `translateX(${tabToggleEl.offsetLeft}px)`;\n  }\n\n  /** @private */\n  _preloadEditedImage() {\n    if (this.$['*imgContainerEl'] && this.$['*originalUrl']) {\n      let width = this.$['*imgContainerEl'].offsetWidth;\n      let src = this.proxyUrl(viewerImageSrc(this.$['*originalUrl'], width, this.$['*editorTransformations']));\n      this._cancelPreload && this._cancelPreload();\n      let {\n        cancel\n      } = batchPreloadImages([src]);\n      this._cancelPreload = () => {\n        cancel();\n        this._cancelPreload = undefined;\n      };\n    }\n  }\n\n  /** @private */\n  _showLoader(show) {\n    this.$.showLoader = show;\n  }\n  _updateInfoTooltip = debounce(() => {\n    let transformations = this.$['*editorTransformations'];\n    let text = '';\n    let visible = false;\n    if (this.$['*tabId'] === TabId.FILTERS) {\n      visible = true;\n      if (this.$['*currentFilter'] && transformations?.filter?.name === this.$['*currentFilter']) {\n        let value = transformations?.filter?.amount || 100;\n        text = this.l10n(this.$['*currentFilter']) + ' ' + value;\n      } else {\n        text = this.l10n(FAKE_ORIGINAL_FILTER);\n      }\n    } else if (this.$['*tabId'] === TabId.SLIDERS && this.$['*currentOperation']) {\n      visible = true;\n      let value = transformations?.[this.$['*currentOperation']] || COLOR_OPERATIONS_CONFIG[this.$['*currentOperation']].zero;\n      text = this.$['*currentOperation'] + ' ' + value;\n    }\n    if (visible) {\n      this.$['*operationTooltip'] = text;\n    }\n    this.ref['tooltip-el'].classList.toggle('info-tooltip_visible', visible);\n  }, 0);\n  initCallback() {\n    super.initCallback();\n    this.$['*sliderEl'] = this.ref['slider-el'];\n    this.sub('*imageSize', imageSize => {\n      if (imageSize) {\n        setTimeout(() => {\n          this._activateTab(this.$['*tabId'], {\n            fromViewer: true\n          });\n        }, 0);\n      }\n    });\n    this.sub('*editorTransformations', editorTransformations => {\n      let appliedFilter = editorTransformations?.filter?.name;\n      if (this.$['*currentFilter'] !== appliedFilter) {\n        this.$['*currentFilter'] = appliedFilter;\n      }\n    });\n    this.sub('*currentFilter', () => {\n      this._updateInfoTooltip();\n    });\n    this.sub('*currentOperation', () => {\n      this._updateInfoTooltip();\n    });\n    this.sub('*tabId', () => {\n      this._updateInfoTooltip();\n    });\n    this.sub('*originalUrl', originalUrl => {\n      this.$['*faderEl'] && this.$['*faderEl'].deactivate();\n    });\n    this.sub('*editorTransformations', transformations => {\n      this._preloadEditedImage();\n      if (this.$['*faderEl']) {\n        this.$['*faderEl'].setTransformations(transformations);\n      }\n    });\n    this.sub('*loadingOperations', ( /** @type {import('./types.js').LoadingOperations} */loadingOperations) => {\n      let anyLoading = false;\n      for (let [, mapping] of loadingOperations.entries()) {\n        if (anyLoading) {\n          break;\n        }\n        for (let [, loading] of mapping.entries()) {\n          if (loading) {\n            anyLoading = true;\n            break;\n          }\n        }\n      }\n      this._debouncedShowLoader(anyLoading);\n    });\n    this.sub('*showSlider', showSlider => {\n      this.$['presence.subToolbar'] = showSlider;\n      this.$['presence.mainToolbar'] = !showSlider;\n    });\n    this._updateInfoTooltip();\n  }\n}\nEditorToolbar.template = /* HTML */`\n  <lr-line-loader-ui set=\"active: showLoader\"></lr-line-loader-ui>\n  <div class=\"info-tooltip_container\">\n    <div class=\"info-tooltip_wrapper\">\n      <div ref=\"tooltip-el\" class=\"info-tooltip info-tooltip_hidden\">{{*operationTooltip}}</div>\n    </div>\n  </div>\n  <div class=\"toolbar-container\">\n    <lr-presence-toggle class=\"sub-toolbar\" set=\"visible: presence.mainToolbar; styles: presence.subTopToolbarStyles\">\n      <div class=\"tab-content-row\">${TABS.map(renderTabContent).join('')}</div>\n      <div class=\"controls-row\">\n        <lr-btn-ui theme=\"boring\" icon=\"closeMax\" set=\"onclick: on.cancel\"> </lr-btn-ui>\n        <div class=\"tab-toggles\">\n          <div ref=\"tabs-indicator\" class=\"tab-toggles_indicator\"></div>\n          ${TABS.map(renderTabToggle).join('')}\n        </div>\n        <lr-btn-ui theme=\"primary\" icon=\"done\" set=\"onclick: on.apply\"> </lr-btn-ui>\n      </div>\n    </lr-presence-toggle>\n    <lr-presence-toggle class=\"sub-toolbar\" set=\"visible: presence.subToolbar; styles: presence.subBottomToolbarStyles\">\n      <div class=\"slider\">\n        <lr-editor-slider ref=\"slider-el\"></lr-editor-slider>\n      </div>\n      <div class=\"controls-row\">\n        <lr-btn-ui theme=\"boring\" set=\"@text: l10n.cancel; onclick: on.cancelSlider;\"> </lr-btn-ui>\n        <lr-btn-ui theme=\"primary\" set=\"@text: l10n.apply; onclick: on.applySlider;\"> </lr-btn-ui>\n      </div>\n    </lr-presence-toggle>\n  </div>\n`;","map":{"version":3,"names":["Block","EditorCropButtonControl","EditorFilterControl","EditorOperationControl","FAKE_ORIGINAL_FILTER","classNames","debounce","batchPreloadImages","ALL_COLOR_OPERATIONS","ALL_CROP_OPERATIONS","ALL_FILTERS","COLOR_OPERATIONS_CONFIG","TabId","TABS","viewerImageSrc","renderTabToggle","id","renderTabContent","EditorToolbar","constructor","init$","Map","CROP","showLoader","filters","colorOperations","cropOperations","l10n","hidden","visible","e","_cancelPreload","$","ref","apply","_onSliderClose","cancel","currentTarget","getAttribute","_activateTab","fromViewer","_debouncedShowLoader","_showLoader","bind","SLIDERS","classList","toggle","_createOperationControl","operation","el","is","_createFilterControl","filter","_createToggleControl","_renderControlsList","tabId","listEl","fr","document","createDocumentFragment","forEach","appendChild","FILTERS","filterId","childNodes","idx","length","add","innerHTML","deactivate","activate","url","isCurrentTab","tabToggleEl","active","_syncTabIndicator","_unmountTabControls","indicatorEl","style","transform","offsetLeft","_preloadEditedImage","width","offsetWidth","src","proxyUrl","undefined","show","_updateInfoTooltip","transformations","text","name","value","amount","zero","initCallback","sub","imageSize","setTimeout","editorTransformations","appliedFilter","originalUrl","setTransformations","loadingOperations","anyLoading","mapping","entries","loading","showSlider","template","map","join"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/CloudImageEditor/src/EditorToolbar.js"],"sourcesContent":["import { Block } from '../../../abstract/Block.js';\nimport { EditorCropButtonControl } from './EditorCropButtonControl.js';\nimport { EditorFilterControl } from './EditorFilterControl.js';\nimport { EditorOperationControl } from './EditorOperationControl.js';\nimport { FAKE_ORIGINAL_FILTER } from './EditorSlider.js';\nimport { classNames } from './lib/classNames.js';\nimport { debounce } from './lib/debounce.js';\nimport { batchPreloadImages } from './lib/preloadImage.js';\nimport {\n  ALL_COLOR_OPERATIONS,\n  ALL_CROP_OPERATIONS,\n  ALL_FILTERS,\n  COLOR_OPERATIONS_CONFIG,\n  TabId,\n  TABS,\n} from './toolbar-constants.js';\nimport { viewerImageSrc } from './util.js';\n\n/** @param {String} id */\nfunction renderTabToggle(id) {\n  return /* HTML */ `\n    <lr-btn-ui\n      theme=\"boring\"\n      ref=\"tab-toggle-${id}\"\n      data-id=\"${id}\"\n      icon=\"${id}\"\n      tabindex=\"0\"\n      set=\"onclick: on.clickTab;\"\n    >\n    </lr-btn-ui>\n  `;\n}\n\n/** @param {String} id */\nfunction renderTabContent(id) {\n  return /* HTML */ `\n    <lr-presence-toggle class=\"tab-content\" set=\"visible: presence.tabContent.${id}; styles: presence.tabContentStyles\">\n      <lr-editor-scroller hidden-scrollbar>\n        <div class=\"controls-list_align\">\n          <div class=\"controls-list_inner\" ref=\"controls-list-${id}\"></div>\n        </div>\n      </lr-editor-scroller>\n    </lr-presence-toggle>\n  `;\n}\n\nexport class EditorToolbar extends Block {\n  constructor() {\n    super();\n\n    this.init$ = {\n      ...this.init$,\n      '*sliderEl': null,\n      /** @type {import('./types.js').LoadingOperations} */\n      '*loadingOperations': new Map(),\n      '*showSlider': false,\n      '*currentFilter': FAKE_ORIGINAL_FILTER,\n      '*currentOperation': null,\n      '*tabId': TabId.CROP,\n      showLoader: false,\n      filters: ALL_FILTERS,\n      colorOperations: ALL_COLOR_OPERATIONS,\n      cropOperations: ALL_CROP_OPERATIONS,\n      '*operationTooltip': null,\n\n      'l10n.cancel': this.l10n('cancel'),\n      'l10n.apply': this.l10n('apply'),\n\n      'presence.mainToolbar': true,\n      'presence.subToolbar': false,\n      'presence.tabContent.crop': false,\n      'presence.tabContent.sliders': false,\n      'presence.tabContent.filters': false,\n      'presence.subTopToolbarStyles': {\n        hidden: 'sub-toolbar--top-hidden',\n        visible: 'sub-toolbar--visible',\n      },\n      'presence.subBottomToolbarStyles': {\n        hidden: 'sub-toolbar--bottom-hidden',\n        visible: 'sub-toolbar--visible',\n      },\n      'presence.tabContentStyles': {\n        hidden: 'tab-content--hidden',\n        visible: 'tab-content--visible',\n      },\n      'on.cancel': (e) => {\n        this._cancelPreload && this._cancelPreload();\n        this.$['*on.cancel']();\n      },\n      'on.apply': (e) => {\n        this.$['*on.apply'](this.$['*editorTransformations']);\n      },\n      'on.applySlider': (e) => {\n        this.ref['slider-el'].apply();\n        this._onSliderClose();\n      },\n      'on.cancelSlider': (e) => {\n        this.ref['slider-el'].cancel();\n        this._onSliderClose();\n      },\n      'on.clickTab': (e) => {\n        let id = e.currentTarget.getAttribute('data-id');\n        this._activateTab(id, { fromViewer: false });\n      },\n    };\n\n    /** @private */\n\n    this._debouncedShowLoader = debounce(this._showLoader.bind(this), 500);\n  }\n\n  /** @private */\n  _onSliderClose() {\n    this.$['*showSlider'] = false;\n    if (this.$['*tabId'] === TabId.SLIDERS) {\n      this.ref['tooltip-el'].classList.toggle('info-tooltip_visible', false);\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} operation\n   */\n  _createOperationControl(operation) {\n    let el = EditorOperationControl.is && new EditorOperationControl();\n    el['operation'] = operation;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} filter\n   */\n  _createFilterControl(filter) {\n    let el = EditorFilterControl.is && new EditorFilterControl();\n    el['filter'] = filter;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} operation\n   */\n  _createToggleControl(operation) {\n    let el = EditorCropButtonControl.is && new EditorCropButtonControl();\n    el['operation'] = operation;\n    return el;\n  }\n\n  /**\n   * @private\n   * @param {String} tabId\n   */\n  _renderControlsList(tabId) {\n    let listEl = this.ref[`controls-list-${tabId}`];\n    let fr = document.createDocumentFragment();\n\n    if (tabId === TabId.CROP) {\n      this.$.cropOperations.forEach((operation) => {\n        let el = this._createToggleControl(operation);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    } else if (tabId === TabId.FILTERS) {\n      [FAKE_ORIGINAL_FILTER, ...this.$.filters].forEach((filterId) => {\n        let el = this._createFilterControl(filterId);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    } else if (tabId === TabId.SLIDERS) {\n      this.$.colorOperations.forEach((operation) => {\n        let el = this._createOperationControl(operation);\n        // @ts-ignore\n        fr.appendChild(el);\n      });\n    }\n\n    fr.childNodes.forEach((/** @type {HTMLElement} */ el, idx) => {\n      if (idx === fr.childNodes.length - 1) {\n        el.classList.add('controls-list_last-item');\n      }\n    });\n\n    listEl.innerHTML = '';\n    listEl.appendChild(fr);\n  }\n\n  /**\n   * @private\n   * @param {String} id\n   * @param {{ fromViewer?: Boolean }} options\n   */\n  _activateTab(id, { fromViewer }) {\n    this.$['*tabId'] = id;\n\n    if (id === TabId.CROP) {\n      this.$['*faderEl'].deactivate();\n      this.$['*cropperEl'].activate(this.$['*imageSize'], { fromViewer });\n    } else {\n      this.$['*faderEl'].activate({ url: this.$['*originalUrl'], fromViewer });\n      this.$['*cropperEl'].deactivate();\n    }\n\n    for (let tabId of TABS) {\n      let isCurrentTab = tabId === id;\n\n      let tabToggleEl = this.ref[`tab-toggle-${tabId}`];\n      tabToggleEl.active = isCurrentTab;\n\n      if (isCurrentTab) {\n        this._renderControlsList(id);\n        this._syncTabIndicator();\n      } else {\n        this._unmountTabControls(tabId);\n      }\n      this.$[`presence.tabContent.${tabId}`] = isCurrentTab;\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} tabId\n   */\n  _unmountTabControls(tabId) {\n    let listEl = this.ref[`controls-list-${tabId}`];\n    if (listEl) {\n      listEl.innerHTML = '';\n    }\n  }\n\n  /** @private */\n  _syncTabIndicator() {\n    let tabToggleEl = this.ref[`tab-toggle-${this.$['*tabId']}`];\n    let indicatorEl = this.ref['tabs-indicator'];\n    indicatorEl.style.transform = `translateX(${tabToggleEl.offsetLeft}px)`;\n  }\n\n  /** @private */\n  _preloadEditedImage() {\n    if (this.$['*imgContainerEl'] && this.$['*originalUrl']) {\n      let width = this.$['*imgContainerEl'].offsetWidth;\n      let src = this.proxyUrl(viewerImageSrc(this.$['*originalUrl'], width, this.$['*editorTransformations']));\n      this._cancelPreload && this._cancelPreload();\n      let { cancel } = batchPreloadImages([src]);\n      this._cancelPreload = () => {\n        cancel();\n        this._cancelPreload = undefined;\n      };\n    }\n  }\n\n  /** @private */\n  _showLoader(show) {\n    this.$.showLoader = show;\n  }\n\n  _updateInfoTooltip = debounce(() => {\n    let transformations = this.$['*editorTransformations'];\n    let text = '';\n    let visible = false;\n\n    if (this.$['*tabId'] === TabId.FILTERS) {\n      visible = true;\n      if (this.$['*currentFilter'] && transformations?.filter?.name === this.$['*currentFilter']) {\n        let value = transformations?.filter?.amount || 100;\n        text = this.l10n(this.$['*currentFilter']) + ' ' + value;\n      } else {\n        text = this.l10n(FAKE_ORIGINAL_FILTER);\n      }\n    } else if (this.$['*tabId'] === TabId.SLIDERS && this.$['*currentOperation']) {\n      visible = true;\n      let value =\n        transformations?.[this.$['*currentOperation']] || COLOR_OPERATIONS_CONFIG[this.$['*currentOperation']].zero;\n      text = this.$['*currentOperation'] + ' ' + value;\n    }\n    if (visible) {\n      this.$['*operationTooltip'] = text;\n    }\n    this.ref['tooltip-el'].classList.toggle('info-tooltip_visible', visible);\n  }, 0);\n\n  initCallback() {\n    super.initCallback();\n\n    this.$['*sliderEl'] = this.ref['slider-el'];\n\n    this.sub('*imageSize', (imageSize) => {\n      if (imageSize) {\n        setTimeout(() => {\n          this._activateTab(this.$['*tabId'], { fromViewer: true });\n        }, 0);\n      }\n    });\n\n    this.sub('*editorTransformations', (editorTransformations) => {\n      let appliedFilter = editorTransformations?.filter?.name;\n      if (this.$['*currentFilter'] !== appliedFilter) {\n        this.$['*currentFilter'] = appliedFilter;\n      }\n    });\n\n    this.sub('*currentFilter', () => {\n      this._updateInfoTooltip();\n    });\n\n    this.sub('*currentOperation', () => {\n      this._updateInfoTooltip();\n    });\n\n    this.sub('*tabId', () => {\n      this._updateInfoTooltip();\n    });\n\n    this.sub('*originalUrl', (originalUrl) => {\n      this.$['*faderEl'] && this.$['*faderEl'].deactivate();\n    });\n\n    this.sub('*editorTransformations', (transformations) => {\n      this._preloadEditedImage();\n      if (this.$['*faderEl']) {\n        this.$['*faderEl'].setTransformations(transformations);\n      }\n    });\n\n    this.sub('*loadingOperations', (/** @type {import('./types.js').LoadingOperations} */ loadingOperations) => {\n      let anyLoading = false;\n      for (let [, mapping] of loadingOperations.entries()) {\n        if (anyLoading) {\n          break;\n        }\n        for (let [, loading] of mapping.entries()) {\n          if (loading) {\n            anyLoading = true;\n            break;\n          }\n        }\n      }\n      this._debouncedShowLoader(anyLoading);\n    });\n\n    this.sub('*showSlider', (showSlider) => {\n      this.$['presence.subToolbar'] = showSlider;\n      this.$['presence.mainToolbar'] = !showSlider;\n    });\n\n    this._updateInfoTooltip();\n  }\n}\n\nEditorToolbar.template = /* HTML */ `\n  <lr-line-loader-ui set=\"active: showLoader\"></lr-line-loader-ui>\n  <div class=\"info-tooltip_container\">\n    <div class=\"info-tooltip_wrapper\">\n      <div ref=\"tooltip-el\" class=\"info-tooltip info-tooltip_hidden\">{{*operationTooltip}}</div>\n    </div>\n  </div>\n  <div class=\"toolbar-container\">\n    <lr-presence-toggle class=\"sub-toolbar\" set=\"visible: presence.mainToolbar; styles: presence.subTopToolbarStyles\">\n      <div class=\"tab-content-row\">${TABS.map(renderTabContent).join('')}</div>\n      <div class=\"controls-row\">\n        <lr-btn-ui theme=\"boring\" icon=\"closeMax\" set=\"onclick: on.cancel\"> </lr-btn-ui>\n        <div class=\"tab-toggles\">\n          <div ref=\"tabs-indicator\" class=\"tab-toggles_indicator\"></div>\n          ${TABS.map(renderTabToggle).join('')}\n        </div>\n        <lr-btn-ui theme=\"primary\" icon=\"done\" set=\"onclick: on.apply\"> </lr-btn-ui>\n      </div>\n    </lr-presence-toggle>\n    <lr-presence-toggle class=\"sub-toolbar\" set=\"visible: presence.subToolbar; styles: presence.subBottomToolbarStyles\">\n      <div class=\"slider\">\n        <lr-editor-slider ref=\"slider-el\"></lr-editor-slider>\n      </div>\n      <div class=\"controls-row\">\n        <lr-btn-ui theme=\"boring\" set=\"@text: l10n.cancel; onclick: on.cancelSlider;\"> </lr-btn-ui>\n        <lr-btn-ui theme=\"primary\" set=\"@text: l10n.apply; onclick: on.applySlider;\"> </lr-btn-ui>\n      </div>\n    </lr-presence-toggle>\n  </div>\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}