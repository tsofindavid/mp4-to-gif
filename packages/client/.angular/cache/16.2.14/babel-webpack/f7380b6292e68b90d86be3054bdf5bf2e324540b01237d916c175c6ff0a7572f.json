{"ast":null,"code":"import _asyncToGenerator from \"/Users/David/Documents/own_projects/mp4-to-gif/packages/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { generateThumb } from '../utils/resizeImage.js';\nimport { uploadFile } from '@uploadcare/upload-client';\nimport { UiMessage } from '../MessageBox/MessageBox.js';\nimport { fileCssBg } from '../svg-backgrounds/svg-backgrounds.js';\nimport { createCdnUrl, createCdnUrlModifiers, createOriginalUrl } from '../../utils/cdn-utils.js';\nimport { EVENT_TYPES, EventData, EventManager } from '../../abstract/EventManager.js';\nimport { debounce } from '../utils/debounce.js';\nimport { IMAGE_ACCEPT_LIST, mergeFileTypes, matchMimeType, matchExtension } from '../../utils/fileTypes.js';\nconst FileItemState = Object.freeze({\n  FINISHED: Symbol(0),\n  FAILED: Symbol(1),\n  UPLOADING: Symbol(2),\n  IDLE: Symbol(3)\n});\nexport class FileItem extends UploaderBlock {\n  pauseRender = true;\n\n  /** @private */\n  _entrySubs = new Set();\n  /** @private */\n  _entry = null;\n  /** @private */\n  _isIntersecting = false;\n  /** @private */\n  _debouncedGenerateThumb = debounce(this._generateThumbnail.bind(this), 100);\n  /** @private */\n  _debouncedCalculateState = debounce(this._calculateState.bind(this), 100); // TODO: better throttle\n  /** @private */\n  _renderedOnce = false;\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-use-cloud-image-editor': 0\n  };\n  init$ = {\n    ...this.init$,\n    uid: '',\n    itemName: '',\n    errorText: '',\n    thumbUrl: '',\n    progressValue: 0,\n    progressVisible: false,\n    progressUnknown: false,\n    badgeIcon: '',\n    isFinished: false,\n    isFailed: false,\n    isUploading: false,\n    isFocused: false,\n    isEditable: false,\n    state: FileItemState.IDLE,\n    '*uploadTrigger': null,\n    onEdit: () => {\n      this.set$({\n        '*focusedEntry': this._entry\n      });\n      if (this.findBlockInCtx(b => b.activityType === ActivityBlock.activities.DETAILS)) {\n        this.$['*currentActivity'] = ActivityBlock.activities.DETAILS;\n      } else {\n        this.$['*currentActivity'] = ActivityBlock.activities.CLOUD_IMG_EDIT;\n      }\n    },\n    onRemove: () => {\n      let entryUuid = this._entry.getValue('uuid');\n      if (entryUuid) {\n        let data = this.getOutputData(dataItem => {\n          return dataItem.getValue('uuid') === entryUuid;\n        });\n        EventManager.emit(new EventData({\n          type: EVENT_TYPES.REMOVE,\n          ctx: this.ctxName,\n          data\n        }));\n      }\n      this.uploadCollection.remove(this.$.uid);\n    },\n    onUpload: () => {\n      this.upload();\n    }\n  };\n  _reset() {\n    for (let sub of this._entrySubs) {\n      sub.remove();\n    }\n    this._debouncedGenerateThumb.cancel();\n    this._entrySubs = new Set();\n    this._entry = null;\n    this._isIntersecting = false;\n  }\n\n  /** @private */\n  _observerCallback(entries) {\n    let [entry] = entries;\n    this._isIntersecting = entry.isIntersecting;\n    if (entry.isIntersecting && !this._renderedOnce) {\n      this.render();\n      this._renderedOnce = true;\n    }\n    if (entry.intersectionRatio === 0) {\n      this._debouncedGenerateThumb.cancel();\n    } else {\n      this._debouncedGenerateThumb();\n    }\n  }\n\n  /** @private */\n  _calculateState() {\n    if (!this._entry) {\n      return;\n    }\n    let entry = this._entry;\n    let state = FileItemState.IDLE;\n    if (entry.getValue('uploadError') || entry.getValue('validationErrorMsg')) {\n      state = FileItemState.FAILED;\n    } else if (entry.getValue('isUploading')) {\n      state = FileItemState.UPLOADING;\n    } else if (entry.getValue('fileInfo')) {\n      state = FileItemState.FINISHED;\n    }\n    if (this.$.state !== state) {\n      this.$.state = state;\n    }\n  }\n\n  /** @private */\n  _generateThumbnail() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this._entry) {\n        return;\n      }\n      let entry = _this._entry;\n      if (entry.getValue('fileInfo') && entry.getValue('isImage')) {\n        let size = _this.getCssData('--cfg-thumb-size') || 76;\n        let thumbUrl = _this.proxyUrl(createCdnUrl(createOriginalUrl(_this.getCssData('--cfg-cdn-cname'), _this._entry.getValue('uuid')), createCdnUrlModifiers(entry.getValue('cdnUrlModifiers'), `scale_crop/${size}x${size}/center`)));\n        let currentThumbUrl = entry.getValue('thumbUrl');\n        if (currentThumbUrl !== thumbUrl) {\n          entry.setValue('thumbUrl', thumbUrl);\n          currentThumbUrl?.startsWith('blob:') && URL.revokeObjectURL(currentThumbUrl);\n        }\n        return;\n      }\n      if (entry.getValue('thumbUrl')) {\n        return;\n      }\n      if (entry.getValue('file')?.type.includes('image')) {\n        try {\n          let thumbUrl = yield generateThumb(entry.getValue('file'), _this.getCssData('--cfg-thumb-size') || 76);\n          entry.setValue('thumbUrl', thumbUrl);\n        } catch (err) {\n          let color = window.getComputedStyle(_this).getPropertyValue('--clr-generic-file-icon');\n          entry.setValue('thumbUrl', fileCssBg(color));\n        }\n      } else {\n        let color = window.getComputedStyle(_this).getPropertyValue('--clr-generic-file-icon');\n        entry.setValue('thumbUrl', fileCssBg(color));\n      }\n    })();\n  }\n\n  /**\n   * @private\n   * @param {'success' | 'error'} type\n   * @param {String} caption\n   * @param {String} text\n   */\n  _showMessage(type, caption, text) {\n    let msg = new UiMessage();\n    msg.caption = caption;\n    msg.text = text;\n    msg.isError = type === 'error';\n    this.set$({\n      badgeIcon: `badge-${type}`,\n      '*message': msg\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} prop\n   * @param {(value: any) => void} handler\n   */\n  _subEntry(prop, handler) {\n    let sub = this._entry.subscribe(prop, value => {\n      if (this.isConnected) {\n        handler(value);\n      }\n    });\n    this._entrySubs.add(sub);\n  }\n\n  /**\n   * @private\n   * @param {import('../../abstract/TypedData.js').TypedData} entry\n   */\n  _validateFileType(entry) {\n    const imagesOnly = this.getCssData('--cfg-img-only');\n    const accept = this.getCssData('--cfg-accept');\n    const allowedFileTypes = mergeFileTypes([...(imagesOnly ? IMAGE_ACCEPT_LIST : []), accept]);\n    if (!allowedFileTypes.length) return;\n    const mimeType = entry.getValue('mimeType');\n    const fileName = entry.getValue('fileName');\n    if (!mimeType || !fileName) {\n      // Skip client validation if mime type or file name are not available for some reasons\n      return;\n    }\n    const mimeOk = matchMimeType(mimeType, allowedFileTypes);\n    const extOk = matchExtension(fileName, allowedFileTypes);\n    if (!mimeOk && !extOk) {\n      // Assume file type is not allowed if both mime and ext checks fail\n      entry.setValue('validationErrorMsg', this.l10n('file-type-not-allowed'));\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} id\n   */\n  _handleEntryId(id) {\n    this._reset();\n\n    /** @type {import('../../abstract/TypedData.js').TypedData} */\n    let entry = this.uploadCollection?.read(id);\n    this._entry = entry;\n    if (!entry) {\n      return;\n    }\n    this._subEntry('validationErrorMsg', validationErrorMsg => {\n      this._debouncedCalculateState();\n      this.$.errorText = validationErrorMsg;\n    });\n    this._subEntry('uploadError', uploadError => {\n      this._debouncedCalculateState();\n      this.$.errorText = uploadError?.message;\n    });\n    this._subEntry('isUploading', () => {\n      this._debouncedCalculateState();\n    });\n    this._subEntry('uploadProgress', uploadProgress => {\n      this.$.progressValue = uploadProgress;\n    });\n    this._subEntry('fileName', name => {\n      this.$.itemName = name || entry.getValue('externalUrl') || this.l10n('file-no-name');\n      if (name) {\n        this._validateFileType(entry);\n      }\n    });\n    this._subEntry('fileSize', fileSize => {\n      let maxFileSize = this.getCssData('--cfg-max-local-file-size-bytes');\n      if (maxFileSize && fileSize && fileSize > maxFileSize) {\n        entry.setValue('validationErrorMsg', this.l10n('files-max-size-limit-error', {\n          maxFileSize\n        }));\n      }\n    });\n    this._subEntry('mimeType', mimeType => {\n      if (mimeType) {\n        this._validateFileType(entry);\n      }\n    });\n    this._subEntry('isImage', isImage => {\n      const imagesOnly = this.getCssData('--cfg-img-only');\n      if (!imagesOnly || isImage) {\n        return;\n      }\n      if (!entry.getValue('fileInfo') && entry.getValue('externalUrl')) {\n        // skip validation for not uploaded files with external url, cause we don't know if they're images or not\n        return;\n      }\n      if (!entry.getValue('fileInfo') && !entry.getValue('mimeType')) {\n        // skip validation for not uploaded files without mime-type, cause we don't know if they're images or not\n        return;\n      }\n      entry.setValue('validationErrorMsg', this.l10n('images-only-accepted'));\n    });\n    this._subEntry('externalUrl', externalUrl => {\n      this.$.itemName = entry.getValue('fileName') || externalUrl || this.l10n('file-no-name');\n    });\n    this._subEntry('uuid', uuid => {\n      this._debouncedCalculateState();\n      if (uuid && this._isIntersecting) {\n        this._debouncedGenerateThumb();\n      }\n    });\n    this._subEntry('cdnUrlModifiers', () => {\n      if (this._isIntersecting) {\n        this._debouncedGenerateThumb();\n      }\n    });\n    this._subEntry('thumbUrl', thumbUrl => {\n      this.$.thumbUrl = thumbUrl ? `url(${thumbUrl})` : '';\n    });\n    if (!this.getCssData('--cfg-confirm-upload')) {\n      this.upload();\n    }\n    if (this._isIntersecting) {\n      this._debouncedGenerateThumb();\n    }\n  }\n  initCallback() {\n    super.initCallback();\n    this.sub('uid', uid => {\n      this._handleEntryId(uid);\n    });\n    this.sub('state', state => {\n      this._handleState(state);\n    });\n    this.sub('--cfg-use-cloud-image-editor', () => {\n      this._handleState(this.$.state);\n    });\n    this.onclick = () => {\n      FileItem.activeInstances.forEach(inst => {\n        if (inst === this) {\n          inst.setAttribute('focused', '');\n        } else {\n          inst.removeAttribute('focused');\n        }\n      });\n    };\n    this.$['*uploadTrigger'] = null;\n    this.sub('*uploadTrigger', val => {\n      if (!val || !this.isConnected) {\n        return;\n      }\n      this.upload();\n    });\n    FileItem.activeInstances.add(this);\n  }\n\n  /** @param {(typeof FileItemState)[keyof typeof FileItemState]} state */\n  _handleState(state) {\n    this.set$({\n      isFailed: state === FileItemState.FAILED,\n      isUploading: state === FileItemState.UPLOADING,\n      isFinished: state === FileItemState.FINISHED,\n      progressVisible: state === FileItemState.UPLOADING,\n      isEditable: this.$['--cfg-use-cloud-image-editor'] && state === FileItemState.FINISHED && this._entry?.getValue('isImage')\n    });\n    if (state === FileItemState.FAILED) {\n      this.$.badgeIcon = 'badge-error';\n    } else if (state === FileItemState.FINISHED) {\n      this.$.badgeIcon = 'badge-success';\n    }\n    if (state === FileItemState.UPLOADING) {\n      this.$.isFocused = false;\n    } else {\n      this.$.progressValue = 0;\n    }\n  }\n  destroyCallback() {\n    super.destroyCallback();\n    FileItem.activeInstances.delete(this);\n    this._reset();\n  }\n  connectedCallback() {\n    super.connectedCallback();\n\n    /** @private */\n    this._observer = new window.IntersectionObserver(this._observerCallback.bind(this), {\n      root: this.parentElement,\n      rootMargin: '50% 0px 50% 0px',\n      threshold: [0, 1]\n    });\n    this._observer.observe(this);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this._debouncedGenerateThumb.cancel();\n    this._observer?.disconnect();\n  }\n  upload() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      let entry = _this2._entry;\n      if (entry.getValue('fileInfo') || entry.getValue('isUploading') || entry.getValue('validationErrorMsg')) {\n        return;\n      }\n      let data = _this2.getOutputData(dataItem => {\n        return !dataItem.getValue('fileInfo');\n      });\n      EventManager.emit(new EventData({\n        type: EVENT_TYPES.UPLOAD_START,\n        ctx: _this2.ctxName,\n        data\n      }));\n      _this2._debouncedCalculateState();\n      entry.setValue('isUploading', true);\n      entry.setValue('uploadError', null);\n      entry.setValue('validationErrorMsg', null);\n      if (!entry.getValue('file') && entry.getValue('externalUrl')) {\n        _this2.$.progressUnknown = true;\n      }\n      try {\n        let abortController = new AbortController();\n        entry.setValue('abortController', abortController);\n        const uploadTask = () => uploadFile(entry.getValue('file') || entry.getValue('externalUrl') || entry.getValue('uuid'), {\n          ..._this2.getUploadClientOptions(),\n          fileName: entry.getValue('fileName'),\n          source: entry.getValue('source'),\n          onProgress: progress => {\n            if (progress.isComputable) {\n              let percentage = progress.value * 100;\n              entry.setValue('uploadProgress', percentage);\n            }\n            _this2.$.progressUnknown = !progress.isComputable;\n          },\n          signal: abortController.signal\n        });\n        let fileInfo = yield _this2.$['*uploadQueue'].add(uploadTask);\n        entry.setMultipleValues({\n          fileInfo,\n          isUploading: false,\n          fileName: fileInfo.originalFilename,\n          fileSize: fileInfo.size,\n          isImage: fileInfo.isImage,\n          mimeType: fileInfo.contentInfo?.mime?.mime ?? fileInfo.mimeType,\n          uuid: fileInfo.uuid,\n          cdnUrl: fileInfo.cdnUrl\n        });\n        if (entry === _this2._entry) {\n          _this2._debouncedCalculateState();\n        }\n      } catch (error) {\n        entry.setMultipleValues({\n          abortController: null,\n          isUploading: false,\n          uploadProgress: 0\n        });\n        if (entry === _this2._entry) {\n          _this2._debouncedCalculateState();\n        }\n        if (!error?.isCancel) {\n          entry.setValue('uploadError', error);\n        }\n      }\n    })();\n  }\n}\nFileItem.template = /* HTML */`\n  <div class=\"inner\" set=\"@finished: isFinished; @uploading: isUploading; @failed: isFailed; @focused: isFocused\">\n    <div class=\"thumb\" set=\"style.backgroundImage: thumbUrl\">\n      <div class=\"badge\">\n        <lr-icon set=\"@name: badgeIcon\"></lr-icon>\n      </div>\n    </div>\n    <div class=\"file-name-wrapper\">\n      <span class=\"file-name\" set=\"@title: itemName\">{{itemName}}</span>\n      <span class=\"file-error\" set=\"@hidden: !errorText\">{{errorText}}</span>\n    </div>\n    <div class=\"file-actions\">\n      <button type=\"button\" class=\"edit-btn mini-btn\" set=\"onclick: onEdit; @hidden: !isEditable\">\n        <lr-icon name=\"edit-file\"></lr-icon>\n      </button>\n      <button type=\"button\" class=\"remove-btn mini-btn\" set=\"onclick: onRemove;\">\n        <lr-icon name=\"remove-file\"></lr-icon>\n      </button>\n      <button type=\"button\" class=\"upload-btn mini-btn\" set=\"onclick: onUpload;\">\n        <lr-icon name=\"upload\"></lr-icon>\n      </button>\n    </div>\n    <lr-progress-bar\n      class=\"progress-bar\"\n      set=\"value: progressValue; visible: progressVisible; unknown: progressUnknown\"\n    >\n    </lr-progress-bar>\n  </div>\n`;\nFileItem.activeInstances = new Set();","map":{"version":3,"names":["UploaderBlock","ActivityBlock","generateThumb","uploadFile","UiMessage","fileCssBg","createCdnUrl","createCdnUrlModifiers","createOriginalUrl","EVENT_TYPES","EventData","EventManager","debounce","IMAGE_ACCEPT_LIST","mergeFileTypes","matchMimeType","matchExtension","FileItemState","Object","freeze","FINISHED","Symbol","FAILED","UPLOADING","IDLE","FileItem","pauseRender","_entrySubs","Set","_entry","_isIntersecting","_debouncedGenerateThumb","_generateThumbnail","bind","_debouncedCalculateState","_calculateState","_renderedOnce","cssInit$","init$","uid","itemName","errorText","thumbUrl","progressValue","progressVisible","progressUnknown","badgeIcon","isFinished","isFailed","isUploading","isFocused","isEditable","state","onEdit","set$","findBlockInCtx","b","activityType","activities","DETAILS","$","CLOUD_IMG_EDIT","onRemove","entryUuid","getValue","data","getOutputData","dataItem","emit","type","REMOVE","ctx","ctxName","uploadCollection","remove","onUpload","upload","_reset","sub","cancel","_observerCallback","entries","entry","isIntersecting","render","intersectionRatio","_this","_asyncToGenerator","size","getCssData","proxyUrl","currentThumbUrl","setValue","startsWith","URL","revokeObjectURL","includes","err","color","window","getComputedStyle","getPropertyValue","_showMessage","caption","text","msg","isError","_subEntry","prop","handler","subscribe","value","isConnected","add","_validateFileType","imagesOnly","accept","allowedFileTypes","length","mimeType","fileName","mimeOk","extOk","l10n","_handleEntryId","id","read","validationErrorMsg","uploadError","message","uploadProgress","name","fileSize","maxFileSize","isImage","externalUrl","uuid","initCallback","_handleState","onclick","activeInstances","forEach","inst","setAttribute","removeAttribute","val","destroyCallback","delete","connectedCallback","_observer","IntersectionObserver","root","parentElement","rootMargin","threshold","observe","disconnectedCallback","disconnect","_this2","UPLOAD_START","abortController","AbortController","uploadTask","getUploadClientOptions","source","onProgress","progress","isComputable","percentage","signal","fileInfo","setMultipleValues","originalFilename","contentInfo","mime","cdnUrl","error","isCancel","template"],"sources":["/Users/David/Documents/own_projects/mp4-to-gif/node_modules/@uploadcare/blocks/blocks/FileItem/FileItem.js"],"sourcesContent":["import { UploaderBlock } from '../../abstract/UploaderBlock.js';\nimport { ActivityBlock } from '../../abstract/ActivityBlock.js';\nimport { generateThumb } from '../utils/resizeImage.js';\nimport { uploadFile } from '@uploadcare/upload-client';\nimport { UiMessage } from '../MessageBox/MessageBox.js';\nimport { fileCssBg } from '../svg-backgrounds/svg-backgrounds.js';\nimport { createCdnUrl, createCdnUrlModifiers, createOriginalUrl } from '../../utils/cdn-utils.js';\nimport { EVENT_TYPES, EventData, EventManager } from '../../abstract/EventManager.js';\nimport { debounce } from '../utils/debounce.js';\nimport { IMAGE_ACCEPT_LIST, mergeFileTypes, matchMimeType, matchExtension } from '../../utils/fileTypes.js';\n\nconst FileItemState = Object.freeze({\n  FINISHED: Symbol(0),\n  FAILED: Symbol(1),\n  UPLOADING: Symbol(2),\n  IDLE: Symbol(3),\n});\n\nexport class FileItem extends UploaderBlock {\n  pauseRender = true;\n\n  /** @private */\n  _entrySubs = new Set();\n  /** @private */\n  _entry = null;\n  /** @private */\n  _isIntersecting = false;\n  /** @private */\n  _debouncedGenerateThumb = debounce(this._generateThumbnail.bind(this), 100);\n  /** @private */\n  _debouncedCalculateState = debounce(this._calculateState.bind(this), 100); // TODO: better throttle\n  /** @private */\n  _renderedOnce = false;\n\n  cssInit$ = {\n    ...this.cssInit$,\n    '--cfg-use-cloud-image-editor': 0,\n  };\n\n  init$ = {\n    ...this.init$,\n    uid: '',\n    itemName: '',\n    errorText: '',\n    thumbUrl: '',\n    progressValue: 0,\n    progressVisible: false,\n    progressUnknown: false,\n    badgeIcon: '',\n    isFinished: false,\n    isFailed: false,\n    isUploading: false,\n    isFocused: false,\n    isEditable: false,\n    state: FileItemState.IDLE,\n    '*uploadTrigger': null,\n\n    onEdit: () => {\n      this.set$({\n        '*focusedEntry': this._entry,\n      });\n      if (this.findBlockInCtx((b) => b.activityType === ActivityBlock.activities.DETAILS)) {\n        this.$['*currentActivity'] = ActivityBlock.activities.DETAILS;\n      } else {\n        this.$['*currentActivity'] = ActivityBlock.activities.CLOUD_IMG_EDIT;\n      }\n    },\n    onRemove: () => {\n      let entryUuid = this._entry.getValue('uuid');\n      if (entryUuid) {\n        let data = this.getOutputData((dataItem) => {\n          return dataItem.getValue('uuid') === entryUuid;\n        });\n        EventManager.emit(\n          new EventData({\n            type: EVENT_TYPES.REMOVE,\n            ctx: this.ctxName,\n            data,\n          })\n        );\n      }\n      this.uploadCollection.remove(this.$.uid);\n    },\n    onUpload: () => {\n      this.upload();\n    },\n  };\n\n  _reset() {\n    for (let sub of this._entrySubs) {\n      sub.remove();\n    }\n\n    this._debouncedGenerateThumb.cancel();\n    this._entrySubs = new Set();\n    this._entry = null;\n    this._isIntersecting = false;\n  }\n\n  /** @private */\n  _observerCallback(entries) {\n    let [entry] = entries;\n    this._isIntersecting = entry.isIntersecting;\n\n    if (entry.isIntersecting && !this._renderedOnce) {\n      this.render();\n      this._renderedOnce = true;\n    }\n    if (entry.intersectionRatio === 0) {\n      this._debouncedGenerateThumb.cancel();\n    } else {\n      this._debouncedGenerateThumb();\n    }\n  }\n\n  /** @private */\n  _calculateState() {\n    if (!this._entry) {\n      return;\n    }\n    let entry = this._entry;\n    let state = FileItemState.IDLE;\n\n    if (entry.getValue('uploadError') || entry.getValue('validationErrorMsg')) {\n      state = FileItemState.FAILED;\n    } else if (entry.getValue('isUploading')) {\n      state = FileItemState.UPLOADING;\n    } else if (entry.getValue('fileInfo')) {\n      state = FileItemState.FINISHED;\n    }\n\n    if (this.$.state !== state) {\n      this.$.state = state;\n    }\n  }\n\n  /** @private */\n  async _generateThumbnail() {\n    if (!this._entry) {\n      return;\n    }\n    let entry = this._entry;\n\n    if (entry.getValue('fileInfo') && entry.getValue('isImage')) {\n      let size = this.getCssData('--cfg-thumb-size') || 76;\n      let thumbUrl = this.proxyUrl(\n        createCdnUrl(\n          createOriginalUrl(this.getCssData('--cfg-cdn-cname'), this._entry.getValue('uuid')),\n          createCdnUrlModifiers(entry.getValue('cdnUrlModifiers'), `scale_crop/${size}x${size}/center`)\n        )\n      );\n      let currentThumbUrl = entry.getValue('thumbUrl');\n      if (currentThumbUrl !== thumbUrl) {\n        entry.setValue('thumbUrl', thumbUrl);\n        currentThumbUrl?.startsWith('blob:') && URL.revokeObjectURL(currentThumbUrl);\n      }\n      return;\n    }\n\n    if (entry.getValue('thumbUrl')) {\n      return;\n    }\n\n    if (entry.getValue('file')?.type.includes('image')) {\n      try {\n        let thumbUrl = await generateThumb(entry.getValue('file'), this.getCssData('--cfg-thumb-size') || 76);\n        entry.setValue('thumbUrl', thumbUrl);\n      } catch (err) {\n        let color = window.getComputedStyle(this).getPropertyValue('--clr-generic-file-icon');\n        entry.setValue('thumbUrl', fileCssBg(color));\n      }\n    } else {\n      let color = window.getComputedStyle(this).getPropertyValue('--clr-generic-file-icon');\n      entry.setValue('thumbUrl', fileCssBg(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {'success' | 'error'} type\n   * @param {String} caption\n   * @param {String} text\n   */\n  _showMessage(type, caption, text) {\n    let msg = new UiMessage();\n    msg.caption = caption;\n    msg.text = text;\n    msg.isError = type === 'error';\n    this.set$({\n      badgeIcon: `badge-${type}`,\n      '*message': msg,\n    });\n  }\n\n  /**\n   * @private\n   * @param {string} prop\n   * @param {(value: any) => void} handler\n   */\n  _subEntry(prop, handler) {\n    let sub = this._entry.subscribe(prop, (value) => {\n      if (this.isConnected) {\n        handler(value);\n      }\n    });\n    this._entrySubs.add(sub);\n  }\n\n  /**\n   * @private\n   * @param {import('../../abstract/TypedData.js').TypedData} entry\n   */\n  _validateFileType(entry) {\n    const imagesOnly = this.getCssData('--cfg-img-only');\n    const accept = this.getCssData('--cfg-accept');\n    const allowedFileTypes = mergeFileTypes([...(imagesOnly ? IMAGE_ACCEPT_LIST : []), accept]);\n    if (!allowedFileTypes.length) return;\n\n    const mimeType = entry.getValue('mimeType');\n    const fileName = entry.getValue('fileName');\n\n    if (!mimeType || !fileName) {\n      // Skip client validation if mime type or file name are not available for some reasons\n      return;\n    }\n\n    const mimeOk = matchMimeType(mimeType, allowedFileTypes);\n    const extOk = matchExtension(fileName, allowedFileTypes);\n\n    if (!mimeOk && !extOk) {\n      // Assume file type is not allowed if both mime and ext checks fail\n      entry.setValue('validationErrorMsg', this.l10n('file-type-not-allowed'));\n    }\n  }\n\n  /**\n   * @private\n   * @param {String} id\n   */\n  _handleEntryId(id) {\n    this._reset();\n\n    /** @type {import('../../abstract/TypedData.js').TypedData} */\n    let entry = this.uploadCollection?.read(id);\n    this._entry = entry;\n\n    if (!entry) {\n      return;\n    }\n\n    this._subEntry('validationErrorMsg', (validationErrorMsg) => {\n      this._debouncedCalculateState();\n      this.$.errorText = validationErrorMsg;\n    });\n\n    this._subEntry('uploadError', (uploadError) => {\n      this._debouncedCalculateState();\n      this.$.errorText = uploadError?.message;\n    });\n\n    this._subEntry('isUploading', () => {\n      this._debouncedCalculateState();\n    });\n\n    this._subEntry('uploadProgress', (uploadProgress) => {\n      this.$.progressValue = uploadProgress;\n    });\n\n    this._subEntry('fileName', (name) => {\n      this.$.itemName = name || entry.getValue('externalUrl') || this.l10n('file-no-name');\n      if (name) {\n        this._validateFileType(entry);\n      }\n    });\n\n    this._subEntry('fileSize', (fileSize) => {\n      let maxFileSize = this.getCssData('--cfg-max-local-file-size-bytes');\n      if (maxFileSize && fileSize && fileSize > maxFileSize) {\n        entry.setValue('validationErrorMsg', this.l10n('files-max-size-limit-error', { maxFileSize }));\n      }\n    });\n\n    this._subEntry('mimeType', (mimeType) => {\n      if (mimeType) {\n        this._validateFileType(entry);\n      }\n    });\n\n    this._subEntry('isImage', (isImage) => {\n      const imagesOnly = this.getCssData('--cfg-img-only');\n      if (!imagesOnly || isImage) {\n        return;\n      }\n      if (!entry.getValue('fileInfo') && entry.getValue('externalUrl')) {\n        // skip validation for not uploaded files with external url, cause we don't know if they're images or not\n        return;\n      }\n      if (!entry.getValue('fileInfo') && !entry.getValue('mimeType')) {\n        // skip validation for not uploaded files without mime-type, cause we don't know if they're images or not\n        return;\n      }\n      entry.setValue('validationErrorMsg', this.l10n('images-only-accepted'));\n    });\n\n    this._subEntry('externalUrl', (externalUrl) => {\n      this.$.itemName = entry.getValue('fileName') || externalUrl || this.l10n('file-no-name');\n    });\n\n    this._subEntry('uuid', (uuid) => {\n      this._debouncedCalculateState();\n      if (uuid && this._isIntersecting) {\n        this._debouncedGenerateThumb();\n      }\n    });\n\n    this._subEntry('cdnUrlModifiers', () => {\n      if (this._isIntersecting) {\n        this._debouncedGenerateThumb();\n      }\n    });\n\n    this._subEntry('thumbUrl', (thumbUrl) => {\n      this.$.thumbUrl = thumbUrl ? `url(${thumbUrl})` : '';\n    });\n\n    if (!this.getCssData('--cfg-confirm-upload')) {\n      this.upload();\n    }\n\n    if (this._isIntersecting) {\n      this._debouncedGenerateThumb();\n    }\n  }\n\n  initCallback() {\n    super.initCallback();\n\n    this.sub('uid', (uid) => {\n      this._handleEntryId(uid);\n    });\n\n    this.sub('state', (state) => {\n      this._handleState(state);\n    });\n\n    this.sub('--cfg-use-cloud-image-editor', () => {\n      this._handleState(this.$.state);\n    });\n\n    this.onclick = () => {\n      FileItem.activeInstances.forEach((inst) => {\n        if (inst === this) {\n          inst.setAttribute('focused', '');\n        } else {\n          inst.removeAttribute('focused');\n        }\n      });\n    };\n\n    this.$['*uploadTrigger'] = null;\n\n    this.sub('*uploadTrigger', (val) => {\n      if (!val || !this.isConnected) {\n        return;\n      }\n      this.upload();\n    });\n    FileItem.activeInstances.add(this);\n  }\n\n  /** @param {(typeof FileItemState)[keyof typeof FileItemState]} state */\n  _handleState(state) {\n    this.set$({\n      isFailed: state === FileItemState.FAILED,\n      isUploading: state === FileItemState.UPLOADING,\n      isFinished: state === FileItemState.FINISHED,\n      progressVisible: state === FileItemState.UPLOADING,\n      isEditable:\n        this.$['--cfg-use-cloud-image-editor'] && state === FileItemState.FINISHED && this._entry?.getValue('isImage'),\n    });\n\n    if (state === FileItemState.FAILED) {\n      this.$.badgeIcon = 'badge-error';\n    } else if (state === FileItemState.FINISHED) {\n      this.$.badgeIcon = 'badge-success';\n    }\n\n    if (state === FileItemState.UPLOADING) {\n      this.$.isFocused = false;\n    } else {\n      this.$.progressValue = 0;\n    }\n  }\n\n  destroyCallback() {\n    super.destroyCallback();\n\n    FileItem.activeInstances.delete(this);\n\n    this._reset();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    /** @private */\n    this._observer = new window.IntersectionObserver(this._observerCallback.bind(this), {\n      root: this.parentElement,\n      rootMargin: '50% 0px 50% 0px',\n      threshold: [0, 1],\n    });\n    this._observer.observe(this);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this._debouncedGenerateThumb.cancel();\n    this._observer?.disconnect();\n  }\n\n  async upload() {\n    let entry = this._entry;\n    if (entry.getValue('fileInfo') || entry.getValue('isUploading') || entry.getValue('validationErrorMsg')) {\n      return;\n    }\n    let data = this.getOutputData((dataItem) => {\n      return !dataItem.getValue('fileInfo');\n    });\n    EventManager.emit(\n      new EventData({\n        type: EVENT_TYPES.UPLOAD_START,\n        ctx: this.ctxName,\n        data,\n      })\n    );\n\n    this._debouncedCalculateState();\n    entry.setValue('isUploading', true);\n    entry.setValue('uploadError', null);\n    entry.setValue('validationErrorMsg', null);\n\n    if (!entry.getValue('file') && entry.getValue('externalUrl')) {\n      this.$.progressUnknown = true;\n    }\n    try {\n      let abortController = new AbortController();\n      entry.setValue('abortController', abortController);\n\n      const uploadTask = () =>\n        uploadFile(entry.getValue('file') || entry.getValue('externalUrl') || entry.getValue('uuid'), {\n          ...this.getUploadClientOptions(),\n          fileName: entry.getValue('fileName'),\n          source: entry.getValue('source'),\n          onProgress: (progress) => {\n            if (progress.isComputable) {\n              let percentage = progress.value * 100;\n              entry.setValue('uploadProgress', percentage);\n            }\n            this.$.progressUnknown = !progress.isComputable;\n          },\n          signal: abortController.signal,\n        });\n\n      let fileInfo = await this.$['*uploadQueue'].add(uploadTask);\n      entry.setMultipleValues({\n        fileInfo,\n        isUploading: false,\n        fileName: fileInfo.originalFilename,\n        fileSize: fileInfo.size,\n        isImage: fileInfo.isImage,\n        mimeType: fileInfo.contentInfo?.mime?.mime ?? fileInfo.mimeType,\n        uuid: fileInfo.uuid,\n        cdnUrl: fileInfo.cdnUrl,\n      });\n\n      if (entry === this._entry) {\n        this._debouncedCalculateState();\n      }\n    } catch (error) {\n      entry.setMultipleValues({\n        abortController: null,\n        isUploading: false,\n        uploadProgress: 0,\n      });\n\n      if (entry === this._entry) {\n        this._debouncedCalculateState();\n      }\n\n      if (!error?.isCancel) {\n        entry.setValue('uploadError', error);\n      }\n    }\n  }\n}\n\nFileItem.template = /* HTML */ `\n  <div class=\"inner\" set=\"@finished: isFinished; @uploading: isUploading; @failed: isFailed; @focused: isFocused\">\n    <div class=\"thumb\" set=\"style.backgroundImage: thumbUrl\">\n      <div class=\"badge\">\n        <lr-icon set=\"@name: badgeIcon\"></lr-icon>\n      </div>\n    </div>\n    <div class=\"file-name-wrapper\">\n      <span class=\"file-name\" set=\"@title: itemName\">{{itemName}}</span>\n      <span class=\"file-error\" set=\"@hidden: !errorText\">{{errorText}}</span>\n    </div>\n    <div class=\"file-actions\">\n      <button type=\"button\" class=\"edit-btn mini-btn\" set=\"onclick: onEdit; @hidden: !isEditable\">\n        <lr-icon name=\"edit-file\"></lr-icon>\n      </button>\n      <button type=\"button\" class=\"remove-btn mini-btn\" set=\"onclick: onRemove;\">\n        <lr-icon name=\"remove-file\"></lr-icon>\n      </button>\n      <button type=\"button\" class=\"upload-btn mini-btn\" set=\"onclick: onUpload;\">\n        <lr-icon name=\"upload\"></lr-icon>\n      </button>\n    </div>\n    <lr-progress-bar\n      class=\"progress-bar\"\n      set=\"value: progressValue; visible: progressVisible; unknown: progressUnknown\"\n    >\n    </lr-progress-bar>\n  </div>\n`;\nFileItem.activeInstances = new Set();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}